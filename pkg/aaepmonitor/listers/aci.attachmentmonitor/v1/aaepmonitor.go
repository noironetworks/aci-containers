/***
Copyright 2021 Cisco Systems Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	aciattachmentmonitorv1 "github.com/noironetworks/aci-containers/pkg/aaepmonitor/apis/aci.attachmentmonitor/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// AaepMonitorLister helps list AaepMonitors.
// All objects returned here must be treated as read-only.
type AaepMonitorLister interface {
	// List lists all AaepMonitors in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*aciattachmentmonitorv1.AaepMonitor, err error)
	// Get retrieves the AaepMonitor from the index for a given name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*aciattachmentmonitorv1.AaepMonitor, error)
	AaepMonitorListerExpansion
}

// aaepMonitorLister implements the AaepMonitorLister interface.
type aaepMonitorLister struct {
	listers.ResourceIndexer[*aciattachmentmonitorv1.AaepMonitor]
}

// NewAaepMonitorLister returns a new AaepMonitorLister.
func NewAaepMonitorLister(indexer cache.Indexer) AaepMonitorLister {
	return &aaepMonitorLister{listers.New[*aciattachmentmonitorv1.AaepMonitor](indexer, aciattachmentmonitorv1.Resource("aaepmonitor"))}
}
