/***
Copyright 2021 Cisco Systems Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// BridgeDomainApplyConfiguration represents an declarative configuration of the BridgeDomain type for use
// with apply.
type BridgeDomainApplyConfiguration struct {
	Name         *string                     `json:"name,omitempty"`
	CommonTenant *bool                       `json:"common-tenant,omitempty"`
	Subnets      []SubnetsApplyConfiguration `json:"subnets,omitempty"`
	Vrf          *VRFApplyConfiguration      `json:"vrf,omitempty"`
}

// BridgeDomainApplyConfiguration constructs an declarative configuration of the BridgeDomain type for use with
// apply.
func BridgeDomain() *BridgeDomainApplyConfiguration {
	return &BridgeDomainApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *BridgeDomainApplyConfiguration) WithName(value string) *BridgeDomainApplyConfiguration {
	b.Name = &value
	return b
}

// WithCommonTenant sets the CommonTenant field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CommonTenant field is set to the value of the last call.
func (b *BridgeDomainApplyConfiguration) WithCommonTenant(value bool) *BridgeDomainApplyConfiguration {
	b.CommonTenant = &value
	return b
}

// WithSubnets adds the given value to the Subnets field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Subnets field.
func (b *BridgeDomainApplyConfiguration) WithSubnets(values ...*SubnetsApplyConfiguration) *BridgeDomainApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithSubnets")
		}
		b.Subnets = append(b.Subnets, *values[i])
	}
	return b
}

// WithVrf sets the Vrf field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Vrf field is set to the value of the last call.
func (b *BridgeDomainApplyConfiguration) WithVrf(value *VRFApplyConfiguration) *BridgeDomainApplyConfiguration {
	b.Vrf = value
	return b
}
