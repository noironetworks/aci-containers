/***
Copyright 2021 Cisco Systems Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/noironetworks/aci-containers/pkg/accprovisioninput/apis/aci.ctrl/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// AccProvisionInputLister helps list AccProvisionInputs.
// All objects returned here must be treated as read-only.
type AccProvisionInputLister interface {
	// List lists all AccProvisionInputs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AccProvisionInput, err error)
	// AccProvisionInputs returns an object that can list and get AccProvisionInputs.
	AccProvisionInputs(namespace string) AccProvisionInputNamespaceLister
	AccProvisionInputListerExpansion
}

// accProvisionInputLister implements the AccProvisionInputLister interface.
type accProvisionInputLister struct {
	indexer cache.Indexer
}

// NewAccProvisionInputLister returns a new AccProvisionInputLister.
func NewAccProvisionInputLister(indexer cache.Indexer) AccProvisionInputLister {
	return &accProvisionInputLister{indexer: indexer}
}

// List lists all AccProvisionInputs in the indexer.
func (s *accProvisionInputLister) List(selector labels.Selector) (ret []*v1alpha1.AccProvisionInput, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AccProvisionInput))
	})
	return ret, err
}

// AccProvisionInputs returns an object that can list and get AccProvisionInputs.
func (s *accProvisionInputLister) AccProvisionInputs(namespace string) AccProvisionInputNamespaceLister {
	return accProvisionInputNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// AccProvisionInputNamespaceLister helps list and get AccProvisionInputs.
// All objects returned here must be treated as read-only.
type AccProvisionInputNamespaceLister interface {
	// List lists all AccProvisionInputs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.AccProvisionInput, err error)
	// Get retrieves the AccProvisionInput from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.AccProvisionInput, error)
	AccProvisionInputNamespaceListerExpansion
}

// accProvisionInputNamespaceLister implements the AccProvisionInputNamespaceLister
// interface.
type accProvisionInputNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all AccProvisionInputs in the indexer for a given namespace.
func (s accProvisionInputNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.AccProvisionInput, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.AccProvisionInput))
	})
	return ret, err
}

// Get retrieves the AccProvisionInput from the indexer for a given namespace and name.
func (s accProvisionInputNamespaceLister) Get(name string) (*v1alpha1.AccProvisionInput, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("accprovisioninput"), name)
	}
	return obj.(*v1alpha1.AccProvisionInput), nil
}
