// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/securitycenter/v1beta1/source.proto

package securitycenter

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Cloud Security Command Center's (Cloud SCC) finding source. A finding source
// is an entity or a mechanism that can produce a finding. A source is like a
// container of findings that come from the same scanner, logger, monitor, etc.
type Source struct {
	// The relative resource name of this source. See:
	// https://cloud.google.com/apis/design/resource_names#relative_resource_name
	// Example:
	// "organizations/{organization_id}/sources/{source_id}"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The source's display name.
	// A source's display name must be unique amongst its siblings, for example,
	// two sources with the same parent can't share the same display name.
	// The display name must have a length between 1 and 64 characters
	// (inclusive).
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The description of the source (max of 1024 characters).
	// Example:
	// "Cloud Security Scanner is a web security scanner for common
	// vulnerabilities in App Engine applications. It can automatically
	// scan and detect four common vulnerabilities, including cross-site-scripting
	// (XSS), Flash injection, mixed content (HTTP in HTTPS), and
	// outdated/insecure libraries."
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Source) Reset()         { *m = Source{} }
func (m *Source) String() string { return proto.CompactTextString(m) }
func (*Source) ProtoMessage()    {}
func (*Source) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf622434a85d65bb, []int{0}
}

func (m *Source) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Source.Unmarshal(m, b)
}
func (m *Source) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Source.Marshal(b, m, deterministic)
}
func (m *Source) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Source.Merge(m, src)
}
func (m *Source) XXX_Size() int {
	return xxx_messageInfo_Source.Size(m)
}
func (m *Source) XXX_DiscardUnknown() {
	xxx_messageInfo_Source.DiscardUnknown(m)
}

var xxx_messageInfo_Source proto.InternalMessageInfo

func (m *Source) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Source) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Source) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*Source)(nil), "google.cloud.securitycenter.v1beta1.Source")
}

func init() {
	proto.RegisterFile("google/cloud/securitycenter/v1beta1/source.proto", fileDescriptor_bf622434a85d65bb)
}

var fileDescriptor_bf622434a85d65bb = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0x59, 0x95, 0x82, 0xa9, 0xa7, 0x3d, 0xd5, 0xe2, 0xa1, 0xfe, 0x01, 0xbd, 0x98, 0xb1,
	0x78, 0xd3, 0x93, 0x3e, 0x80, 0xf8, 0x07, 0x41, 0xbc, 0xc8, 0x34, 0x3b, 0x84, 0xc0, 0x6e, 0x66,
	0x49, 0xb2, 0x42, 0x2d, 0xf5, 0xc5, 0x7c, 0x23, 0x9f, 0x42, 0x9a, 0x04, 0xba, 0xf5, 0x20, 0xde,
	0x26, 0xf3, 0x7d, 0xbf, 0xe1, 0xe3, 0x8b, 0xb8, 0xd0, 0xcc, 0xba, 0x26, 0x50, 0x35, 0x77, 0x15,
	0x78, 0x52, 0x9d, 0x33, 0x61, 0xae, 0xc8, 0x06, 0x72, 0xf0, 0x3e, 0x9d, 0x51, 0xc0, 0x29, 0x78,
	0xee, 0x9c, 0x22, 0xd9, 0x3a, 0x0e, 0x5c, 0x1e, 0x27, 0x42, 0x46, 0x42, 0x6e, 0x12, 0x32, 0x13,
	0xe3, 0xfd, 0x7c, 0x16, 0x5b, 0x03, 0x8e, 0xfa, 0xfc, 0xf8, 0xa0, 0x27, 0xa1, 0xb5, 0x1c, 0x30,
	0x18, 0xb6, 0x3e, 0xa9, 0x47, 0x5f, 0x85, 0x18, 0x3c, 0x45, 0x7b, 0x59, 0x8a, 0x1d, 0x8b, 0x0d,
	0x8d, 0x8a, 0x49, 0x71, 0xb6, 0xfb, 0x18, 0xe7, 0xf2, 0x50, 0xec, 0x55, 0xc6, 0xb7, 0x35, 0xce,
	0xdf, 0xa2, 0xb6, 0x15, 0xb5, 0x61, 0xde, 0xdd, 0xad, 0x2c, 0x13, 0x31, 0xac, 0xc8, 0x2b, 0x67,
	0xda, 0xd5, 0xdd, 0xd1, 0x76, 0x76, 0xac, 0x57, 0x57, 0x2f, 0xdf, 0x37, 0xcf, 0xe2, 0xe4, 0x57,
	0xf2, 0x94, 0x0a, 0x5b, 0xe3, 0xa5, 0xe2, 0x06, 0x72, 0x86, 0x73, 0x76, 0x1a, 0xad, 0xf9, 0x48,
	0x19, 0x61, 0xd1, 0x7f, 0x2e, 0x73, 0x2f, 0x1e, 0x16, 0x69, 0x58, 0xde, 0x7e, 0x8a, 0x53, 0xc5,
	0x8d, 0xfc, 0x47, 0x43, 0xf7, 0xc5, 0xeb, 0x43, 0xb6, 0x69, 0xae, 0xd1, 0x6a, 0xc9, 0x4e, 0x83,
	0x26, 0x1b, 0x6b, 0x80, 0x75, 0x9a, 0x3f, 0x7f, 0xe6, 0x7a, 0x73, 0x3d, 0x1b, 0x44, 0xfa, 0xf2,
	0x27, 0x00, 0x00, 0xff, 0xff, 0x0b, 0xd2, 0x82, 0x21, 0xd6, 0x01, 0x00, 0x00,
}
