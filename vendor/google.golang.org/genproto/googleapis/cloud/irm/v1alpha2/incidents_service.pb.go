// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/irm/v1alpha2/incidents_service.proto

package irm

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request for the CreateIncident method.
type CreateIncidentRequest struct {
	// Required. The incident to create.
	Incident *Incident `protobuf:"bytes,1,opt,name=incident,proto3" json:"incident,omitempty"`
	// Required. The resource name of the hosting Stackdriver project which the incident
	// belongs to.
	// The name is of the form `projects/{project_id_or_number}`
	// .
	Parent               string   `protobuf:"bytes,2,opt,name=parent,proto3" json:"parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateIncidentRequest) Reset()         { *m = CreateIncidentRequest{} }
func (m *CreateIncidentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIncidentRequest) ProtoMessage()    {}
func (*CreateIncidentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{0}
}

func (m *CreateIncidentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIncidentRequest.Unmarshal(m, b)
}
func (m *CreateIncidentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIncidentRequest.Marshal(b, m, deterministic)
}
func (m *CreateIncidentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIncidentRequest.Merge(m, src)
}
func (m *CreateIncidentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIncidentRequest.Size(m)
}
func (m *CreateIncidentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIncidentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIncidentRequest proto.InternalMessageInfo

func (m *CreateIncidentRequest) GetIncident() *Incident {
	if m != nil {
		return m.Incident
	}
	return nil
}

func (m *CreateIncidentRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

// Request for the GetIncident method.
type GetIncidentRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIncidentRequest) Reset()         { *m = GetIncidentRequest{} }
func (m *GetIncidentRequest) String() string { return proto.CompactTextString(m) }
func (*GetIncidentRequest) ProtoMessage()    {}
func (*GetIncidentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{1}
}

func (m *GetIncidentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIncidentRequest.Unmarshal(m, b)
}
func (m *GetIncidentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIncidentRequest.Marshal(b, m, deterministic)
}
func (m *GetIncidentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIncidentRequest.Merge(m, src)
}
func (m *GetIncidentRequest) XXX_Size() int {
	return xxx_messageInfo_GetIncidentRequest.Size(m)
}
func (m *GetIncidentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIncidentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIncidentRequest proto.InternalMessageInfo

func (m *GetIncidentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for the UpdateIncident method.
type UpdateIncidentRequest struct {
	// Required. The incident to update with the new values.
	Incident *Incident `protobuf:"bytes,1,opt,name=incident,proto3" json:"incident,omitempty"`
	// List of fields that should be updated.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateIncidentRequest) Reset()         { *m = UpdateIncidentRequest{} }
func (m *UpdateIncidentRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateIncidentRequest) ProtoMessage()    {}
func (*UpdateIncidentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{2}
}

func (m *UpdateIncidentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateIncidentRequest.Unmarshal(m, b)
}
func (m *UpdateIncidentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateIncidentRequest.Marshal(b, m, deterministic)
}
func (m *UpdateIncidentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateIncidentRequest.Merge(m, src)
}
func (m *UpdateIncidentRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateIncidentRequest.Size(m)
}
func (m *UpdateIncidentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateIncidentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateIncidentRequest proto.InternalMessageInfo

func (m *UpdateIncidentRequest) GetIncident() *Incident {
	if m != nil {
		return m.Incident
	}
	return nil
}

func (m *UpdateIncidentRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// Request for the SearchSimilarIncidents method.
type SearchSimilarIncidentsRequest struct {
	// Required. Resource name of the incident or signal, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Number of similar incidents to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from an earlier query, as returned in 'next_page_token'.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSimilarIncidentsRequest) Reset()         { *m = SearchSimilarIncidentsRequest{} }
func (m *SearchSimilarIncidentsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchSimilarIncidentsRequest) ProtoMessage()    {}
func (*SearchSimilarIncidentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{3}
}

func (m *SearchSimilarIncidentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSimilarIncidentsRequest.Unmarshal(m, b)
}
func (m *SearchSimilarIncidentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSimilarIncidentsRequest.Marshal(b, m, deterministic)
}
func (m *SearchSimilarIncidentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSimilarIncidentsRequest.Merge(m, src)
}
func (m *SearchSimilarIncidentsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchSimilarIncidentsRequest.Size(m)
}
func (m *SearchSimilarIncidentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSimilarIncidentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSimilarIncidentsRequest proto.InternalMessageInfo

func (m *SearchSimilarIncidentsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SearchSimilarIncidentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchSimilarIncidentsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response for the SearchSimilarIncidents method.
type SearchSimilarIncidentsResponse struct {
	// The search results, ordered by descending relevance.
	Results []*SearchSimilarIncidentsResponse_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	// Page token to fetch the next set of similar incidents.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSimilarIncidentsResponse) Reset()         { *m = SearchSimilarIncidentsResponse{} }
func (m *SearchSimilarIncidentsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchSimilarIncidentsResponse) ProtoMessage()    {}
func (*SearchSimilarIncidentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{4}
}

func (m *SearchSimilarIncidentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSimilarIncidentsResponse.Unmarshal(m, b)
}
func (m *SearchSimilarIncidentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSimilarIncidentsResponse.Marshal(b, m, deterministic)
}
func (m *SearchSimilarIncidentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSimilarIncidentsResponse.Merge(m, src)
}
func (m *SearchSimilarIncidentsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchSimilarIncidentsResponse.Size(m)
}
func (m *SearchSimilarIncidentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSimilarIncidentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSimilarIncidentsResponse proto.InternalMessageInfo

func (m *SearchSimilarIncidentsResponse) GetResults() []*SearchSimilarIncidentsResponse_Result {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *SearchSimilarIncidentsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// A single search result, i.e. an incident with (potentially) additional
// information.
type SearchSimilarIncidentsResponse_Result struct {
	// An incident that is "similar" to the incident or signal specified in the
	// request.
	Incident             *Incident `protobuf:"bytes,1,opt,name=incident,proto3" json:"incident,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SearchSimilarIncidentsResponse_Result) Reset()         { *m = SearchSimilarIncidentsResponse_Result{} }
func (m *SearchSimilarIncidentsResponse_Result) String() string { return proto.CompactTextString(m) }
func (*SearchSimilarIncidentsResponse_Result) ProtoMessage()    {}
func (*SearchSimilarIncidentsResponse_Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{4, 0}
}

func (m *SearchSimilarIncidentsResponse_Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSimilarIncidentsResponse_Result.Unmarshal(m, b)
}
func (m *SearchSimilarIncidentsResponse_Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSimilarIncidentsResponse_Result.Marshal(b, m, deterministic)
}
func (m *SearchSimilarIncidentsResponse_Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSimilarIncidentsResponse_Result.Merge(m, src)
}
func (m *SearchSimilarIncidentsResponse_Result) XXX_Size() int {
	return xxx_messageInfo_SearchSimilarIncidentsResponse_Result.Size(m)
}
func (m *SearchSimilarIncidentsResponse_Result) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSimilarIncidentsResponse_Result.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSimilarIncidentsResponse_Result proto.InternalMessageInfo

func (m *SearchSimilarIncidentsResponse_Result) GetIncident() *Incident {
	if m != nil {
		return m.Incident
	}
	return nil
}

// Request for the CreateAnnotation method.
type CreateAnnotationRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. Only annotation.content is an input argument.
	Annotation           *Annotation `protobuf:"bytes,2,opt,name=annotation,proto3" json:"annotation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateAnnotationRequest) Reset()         { *m = CreateAnnotationRequest{} }
func (m *CreateAnnotationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAnnotationRequest) ProtoMessage()    {}
func (*CreateAnnotationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{5}
}

func (m *CreateAnnotationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAnnotationRequest.Unmarshal(m, b)
}
func (m *CreateAnnotationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAnnotationRequest.Marshal(b, m, deterministic)
}
func (m *CreateAnnotationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAnnotationRequest.Merge(m, src)
}
func (m *CreateAnnotationRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAnnotationRequest.Size(m)
}
func (m *CreateAnnotationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAnnotationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAnnotationRequest proto.InternalMessageInfo

func (m *CreateAnnotationRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateAnnotationRequest) GetAnnotation() *Annotation {
	if m != nil {
		return m.Annotation
	}
	return nil
}

// Request for the ListAnnotations method.
type ListAnnotationsRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Number of annotations to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from an earlier query, as returned in `next_page_token`.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAnnotationsRequest) Reset()         { *m = ListAnnotationsRequest{} }
func (m *ListAnnotationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAnnotationsRequest) ProtoMessage()    {}
func (*ListAnnotationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{6}
}

func (m *ListAnnotationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAnnotationsRequest.Unmarshal(m, b)
}
func (m *ListAnnotationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAnnotationsRequest.Marshal(b, m, deterministic)
}
func (m *ListAnnotationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAnnotationsRequest.Merge(m, src)
}
func (m *ListAnnotationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAnnotationsRequest.Size(m)
}
func (m *ListAnnotationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAnnotationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAnnotationsRequest proto.InternalMessageInfo

func (m *ListAnnotationsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListAnnotationsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAnnotationsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response for the ListAnnotations method.
type ListAnnotationsResponse struct {
	// List of annotations.
	Annotations []*Annotation `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	// Page token to fetch the next set of annotations.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAnnotationsResponse) Reset()         { *m = ListAnnotationsResponse{} }
func (m *ListAnnotationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListAnnotationsResponse) ProtoMessage()    {}
func (*ListAnnotationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{7}
}

func (m *ListAnnotationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAnnotationsResponse.Unmarshal(m, b)
}
func (m *ListAnnotationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAnnotationsResponse.Marshal(b, m, deterministic)
}
func (m *ListAnnotationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAnnotationsResponse.Merge(m, src)
}
func (m *ListAnnotationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListAnnotationsResponse.Size(m)
}
func (m *ListAnnotationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAnnotationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAnnotationsResponse proto.InternalMessageInfo

func (m *ListAnnotationsResponse) GetAnnotations() []*Annotation {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *ListAnnotationsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request for the CreateTag method.
type CreateTagRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. Tag to create. Only tag.display_name is an input argument.
	Tag                  *Tag     `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTagRequest) Reset()         { *m = CreateTagRequest{} }
func (m *CreateTagRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTagRequest) ProtoMessage()    {}
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{8}
}

func (m *CreateTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTagRequest.Unmarshal(m, b)
}
func (m *CreateTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTagRequest.Marshal(b, m, deterministic)
}
func (m *CreateTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTagRequest.Merge(m, src)
}
func (m *CreateTagRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTagRequest.Size(m)
}
func (m *CreateTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTagRequest proto.InternalMessageInfo

func (m *CreateTagRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateTagRequest) GetTag() *Tag {
	if m != nil {
		return m.Tag
	}
	return nil
}

// Request for the DeleteTag method.
type DeleteTagRequest struct {
	// Required. Resource name of the tag.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTagRequest) Reset()         { *m = DeleteTagRequest{} }
func (m *DeleteTagRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTagRequest) ProtoMessage()    {}
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{9}
}

func (m *DeleteTagRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTagRequest.Unmarshal(m, b)
}
func (m *DeleteTagRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTagRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTagRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTagRequest.Merge(m, src)
}
func (m *DeleteTagRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTagRequest.Size(m)
}
func (m *DeleteTagRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTagRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTagRequest proto.InternalMessageInfo

func (m *DeleteTagRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for the ListTagsForIncident method.
type ListTagsRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Number of tags to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from an earlier query, as returned in `next_page_token`.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTagsRequest) Reset()         { *m = ListTagsRequest{} }
func (m *ListTagsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTagsRequest) ProtoMessage()    {}
func (*ListTagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{10}
}

func (m *ListTagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTagsRequest.Unmarshal(m, b)
}
func (m *ListTagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTagsRequest.Marshal(b, m, deterministic)
}
func (m *ListTagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTagsRequest.Merge(m, src)
}
func (m *ListTagsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTagsRequest.Size(m)
}
func (m *ListTagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTagsRequest proto.InternalMessageInfo

func (m *ListTagsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListTagsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListTagsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response for the ListTagsForIncident method.
type ListTagsResponse struct {
	// Tags.
	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
	// Page token to fetch the next set of tags.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTagsResponse) Reset()         { *m = ListTagsResponse{} }
func (m *ListTagsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTagsResponse) ProtoMessage()    {}
func (*ListTagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{11}
}

func (m *ListTagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTagsResponse.Unmarshal(m, b)
}
func (m *ListTagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTagsResponse.Marshal(b, m, deterministic)
}
func (m *ListTagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTagsResponse.Merge(m, src)
}
func (m *ListTagsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTagsResponse.Size(m)
}
func (m *ListTagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTagsResponse proto.InternalMessageInfo

func (m *ListTagsResponse) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ListTagsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request for the CreateSignal method.
type CreateSignalRequest struct {
	// Required. The resource name of the hosting Stackdriver project which requested
	// signal belongs to.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The signal to create.
	Signal               *Signal  `protobuf:"bytes,2,opt,name=signal,proto3" json:"signal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSignalRequest) Reset()         { *m = CreateSignalRequest{} }
func (m *CreateSignalRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSignalRequest) ProtoMessage()    {}
func (*CreateSignalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{12}
}

func (m *CreateSignalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSignalRequest.Unmarshal(m, b)
}
func (m *CreateSignalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSignalRequest.Marshal(b, m, deterministic)
}
func (m *CreateSignalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSignalRequest.Merge(m, src)
}
func (m *CreateSignalRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSignalRequest.Size(m)
}
func (m *CreateSignalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSignalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSignalRequest proto.InternalMessageInfo

func (m *CreateSignalRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateSignalRequest) GetSignal() *Signal {
	if m != nil {
		return m.Signal
	}
	return nil
}

// Request for the SearchSignals method.
type SearchSignalsRequest struct {
	// Required. The resource name of the hosting Stackdriver project which requested
	// incidents belong to.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// An expression that defines which signals to return.
	//
	// Search atoms can be used to match certain specific fields.  Otherwise,
	// plain text will match text fields in the signal.
	//
	// Search atoms:
	//
	// * `start` - (timestamp) The time the signal was created.
	// * `title` - The title of the signal.
	// * `signal_state` - `open` or `closed`. State of the signal.
	//   (e.g., `signal_state:open`)
	//
	// Timestamp formats:
	//
	// * yyyy-MM-dd - an absolute date, treated as a calendar-day-wide window.
	//   In other words, the "<" operator will match dates before that date, the
	//   ">" operator will match dates after that date, and the ":" operator will
	//   match the entire day.
	// * yyyy-MM-ddTHH:mm - Same as above, but with minute resolution.
	// * yyyy-MM-ddTHH:mm:ss - Same as above, but with second resolution.
	// * Nd (e.g. 7d) - a relative number of days ago, treated as a moment in time
	//   (as opposed to a day-wide span) a multiple of 24 hours ago (as opposed to
	//   calendar days).  In the case of daylight savings time, it will apply the
	//   current timezone to both ends of the range.  Note that exact matching
	//   (e.g. `start:7d`) is unlikely to be useful because that would only match
	//   signals created precisely at a particular instant in time.
	//
	// The absolute timestamp formats (everything starting with a year) can
	// optionally be followed with a UTC offset in +/-hh:mm format.  Also, the 'T'
	// separating dates and times can optionally be replaced with a space. Note
	// that any timestamp containing a space or colon will need to be quoted.
	//
	// Examples:
	//
	// * `foo` - matches signals containing the word "foo"
	// * `"foo bar"` - matches signals containing the phrase "foo bar"
	// * `foo bar` or `foo AND bar` - matches signals containing the words
	//   "foo" and "bar"
	// * `foo -bar` or `foo AND NOT bar` - matches signals containing the
	//   word
	//   "foo" but not the word "bar"
	// * `foo OR bar` - matches signals containing the word "foo" or the
	//   word "bar"
	// * `start>2018-11-28` - matches signals which started after November
	//   11, 2018.
	// * `start<=2018-11-28` - matches signals which started on or before
	//   November 11, 2018.
	// * `start:2018-11-28` - matches signals which started on November 11,
	//   2018.
	// * `start>"2018-11-28 01:02:03+04:00"` - matches signals which started
	//   after November 11, 2018 at 1:02:03 AM according to the UTC+04 time
	//   zone.
	// * `start>7d` - matches signals which started after the point in time
	//   7*24 hours ago
	// * `start>180d` - similar to 7d, but likely to cross the daylight savings
	//   time boundary, so the end time will be 1 hour different from "now."
	// * `foo AND start>90d AND stage<resolved` - unresolved signals from
	//   the past 90 days containing the word "foo"
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Maximum number of `signals` to return in the response.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from an earlier query, as returned in `next_page_token`. All
	// field values except for page_size and page_token should be the same as the
	// original query (may return an error or unexpected data otherwise).
	PageToken            string   `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSignalsRequest) Reset()         { *m = SearchSignalsRequest{} }
func (m *SearchSignalsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchSignalsRequest) ProtoMessage()    {}
func (*SearchSignalsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{13}
}

func (m *SearchSignalsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSignalsRequest.Unmarshal(m, b)
}
func (m *SearchSignalsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSignalsRequest.Marshal(b, m, deterministic)
}
func (m *SearchSignalsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSignalsRequest.Merge(m, src)
}
func (m *SearchSignalsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchSignalsRequest.Size(m)
}
func (m *SearchSignalsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSignalsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSignalsRequest proto.InternalMessageInfo

func (m *SearchSignalsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *SearchSignalsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchSignalsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchSignalsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response for the SearchSignals method.
type SearchSignalsResponse struct {
	// Signals that matched the query in the request.
	Signals []*Signal `protobuf:"bytes,1,rep,name=signals,proto3" json:"signals,omitempty"`
	// Page token to fetch the next set of signals.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchSignalsResponse) Reset()         { *m = SearchSignalsResponse{} }
func (m *SearchSignalsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchSignalsResponse) ProtoMessage()    {}
func (*SearchSignalsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{14}
}

func (m *SearchSignalsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchSignalsResponse.Unmarshal(m, b)
}
func (m *SearchSignalsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchSignalsResponse.Marshal(b, m, deterministic)
}
func (m *SearchSignalsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchSignalsResponse.Merge(m, src)
}
func (m *SearchSignalsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchSignalsResponse.Size(m)
}
func (m *SearchSignalsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchSignalsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchSignalsResponse proto.InternalMessageInfo

func (m *SearchSignalsResponse) GetSignals() []*Signal {
	if m != nil {
		return m.Signals
	}
	return nil
}

func (m *SearchSignalsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request for the GetSignal method.
type GetSignalRequest struct {
	// Required. Resource name of the Signal resource, for example,
	// "projects/{project_id_or_number}/signals/{signal_id}".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSignalRequest) Reset()         { *m = GetSignalRequest{} }
func (m *GetSignalRequest) String() string { return proto.CompactTextString(m) }
func (*GetSignalRequest) ProtoMessage()    {}
func (*GetSignalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{15}
}

func (m *GetSignalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSignalRequest.Unmarshal(m, b)
}
func (m *GetSignalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSignalRequest.Marshal(b, m, deterministic)
}
func (m *GetSignalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSignalRequest.Merge(m, src)
}
func (m *GetSignalRequest) XXX_Size() int {
	return xxx_messageInfo_GetSignalRequest.Size(m)
}
func (m *GetSignalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSignalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSignalRequest proto.InternalMessageInfo

func (m *GetSignalRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for the LookupSignal method.
type LookupSignalRequest struct {
	// The ID to use for lookup.
	//
	// Types that are valid to be assigned to AlternateId:
	//	*LookupSignalRequest_CsccFinding
	//	*LookupSignalRequest_StackdriverNotificationId
	AlternateId          isLookupSignalRequest_AlternateId `protobuf_oneof:"alternate_id"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *LookupSignalRequest) Reset()         { *m = LookupSignalRequest{} }
func (m *LookupSignalRequest) String() string { return proto.CompactTextString(m) }
func (*LookupSignalRequest) ProtoMessage()    {}
func (*LookupSignalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{16}
}

func (m *LookupSignalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupSignalRequest.Unmarshal(m, b)
}
func (m *LookupSignalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupSignalRequest.Marshal(b, m, deterministic)
}
func (m *LookupSignalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupSignalRequest.Merge(m, src)
}
func (m *LookupSignalRequest) XXX_Size() int {
	return xxx_messageInfo_LookupSignalRequest.Size(m)
}
func (m *LookupSignalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupSignalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupSignalRequest proto.InternalMessageInfo

type isLookupSignalRequest_AlternateId interface {
	isLookupSignalRequest_AlternateId()
}

type LookupSignalRequest_CsccFinding struct {
	CsccFinding string `protobuf:"bytes,2,opt,name=cscc_finding,json=csccFinding,proto3,oneof"`
}

type LookupSignalRequest_StackdriverNotificationId struct {
	StackdriverNotificationId string `protobuf:"bytes,3,opt,name=stackdriver_notification_id,json=stackdriverNotificationId,proto3,oneof"`
}

func (*LookupSignalRequest_CsccFinding) isLookupSignalRequest_AlternateId() {}

func (*LookupSignalRequest_StackdriverNotificationId) isLookupSignalRequest_AlternateId() {}

func (m *LookupSignalRequest) GetAlternateId() isLookupSignalRequest_AlternateId {
	if m != nil {
		return m.AlternateId
	}
	return nil
}

func (m *LookupSignalRequest) GetCsccFinding() string {
	if x, ok := m.GetAlternateId().(*LookupSignalRequest_CsccFinding); ok {
		return x.CsccFinding
	}
	return ""
}

func (m *LookupSignalRequest) GetStackdriverNotificationId() string {
	if x, ok := m.GetAlternateId().(*LookupSignalRequest_StackdriverNotificationId); ok {
		return x.StackdriverNotificationId
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*LookupSignalRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*LookupSignalRequest_CsccFinding)(nil),
		(*LookupSignalRequest_StackdriverNotificationId)(nil),
	}
}

// Request for the UpdateSignal method.
type UpdateSignalRequest struct {
	// Required. The signal to update with the new values.
	Signal *Signal `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	// List of fields that should be updated.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateSignalRequest) Reset()         { *m = UpdateSignalRequest{} }
func (m *UpdateSignalRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSignalRequest) ProtoMessage()    {}
func (*UpdateSignalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{17}
}

func (m *UpdateSignalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSignalRequest.Unmarshal(m, b)
}
func (m *UpdateSignalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSignalRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSignalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSignalRequest.Merge(m, src)
}
func (m *UpdateSignalRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSignalRequest.Size(m)
}
func (m *UpdateSignalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSignalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSignalRequest proto.InternalMessageInfo

func (m *UpdateSignalRequest) GetSignal() *Signal {
	if m != nil {
		return m.Signal
	}
	return nil
}

func (m *UpdateSignalRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// Request for the SearchIncidents method.
type SearchIncidentsRequest struct {
	// Required. The resource name of the hosting Stackdriver project which requested
	// incidents belong to.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// An expression that defines which incidents to return.
	//
	// Search atoms can be used to match certain specific fields.  Otherwise,
	// plain text will match text fields in the incident.
	//
	// Search atoms:
	// * `start` - (timestamp) The time the incident started.
	// * `stage` - The stage of the incident, one of detected, triaged, mitigated,
	//   resolved, documented, or duplicate (which correspond to values in the
	//   Incident.Stage enum). These are ordered, so `stage<resolved` is
	//   equivalent to `stage:detected OR stage:triaged OR stage:mitigated`.
	// * `severity` - (Incident.Severity) The severity of the incident.
	//    + Supports matching on a specific severity (for example,
	//    `severity:major`) or on a range (for example, `severity>medium`,
	//    `severity<=minor`, etc.).
	//
	// Timestamp formats:
	// * yyyy-MM-dd - an absolute date, treated as a calendar-day-wide window.
	//   In other words, the "<" operator will match dates before that date, the
	//   ">" operator will match dates after that date, and the ":" or "="
	//   operators will match the entire day.
	// * Nd (for example, 7d) - a relative number of days ago, treated as a moment
	//   in time (as opposed to a day-wide span). A multiple of 24 hours ago (as
	//   opposed to calendar days).  In the case of daylight savings time, it will
	//   apply the current timezone to both ends of the range.  Note that exact
	//   matching (for example, `start:7d`) is unlikely to be useful because that
	//   would only match incidents created precisely at a particular instant in
	//   time.
	//
	// Examples:
	//
	// * `foo` - matches incidents containing the word "foo"
	// * `"foo bar"` - matches incidents containing the phrase "foo bar"
	// * `foo bar` or `foo AND bar` - matches incidents containing the words "foo"
	//   and "bar"
	// * `foo -bar` or `foo AND NOT bar` - matches incidents containing the word
	//   "foo" but not the word "bar"
	// * `foo OR bar` - matches incidents containing the word "foo" or the word
	//   "bar"
	// * `start>2018-11-28` - matches incidents which started after November 11,
	//   2018.
	// * `start<=2018-11-28` - matches incidents which started on or before
	//   November 11, 2018.
	// * `start:2018-11-28` - matches incidents which started on November 11,
	//   2018.
	// * `start>7d` - matches incidents which started after the point in time 7*24
	//   hours ago
	// * `start>180d` - similar to 7d, but likely to cross the daylight savings
	//   time boundary, so the end time will be 1 hour different from "now."
	// * `foo AND start>90d AND stage<resolved` - unresolved incidents from the
	//   past 90 days containing the word "foo"
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Number of incidents to return.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from an earlier query, as returned in `next_page_token`.
	PageToken string `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// The time zone name. It should be an IANA TZ name, such as
	// "America/Los_Angeles". For more information,
	// see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
	// If no time zone is specified, the default is UTC.
	TimeZone             string   `protobuf:"bytes,5,opt,name=time_zone,json=timeZone,proto3" json:"time_zone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchIncidentsRequest) Reset()         { *m = SearchIncidentsRequest{} }
func (m *SearchIncidentsRequest) String() string { return proto.CompactTextString(m) }
func (*SearchIncidentsRequest) ProtoMessage()    {}
func (*SearchIncidentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{18}
}

func (m *SearchIncidentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchIncidentsRequest.Unmarshal(m, b)
}
func (m *SearchIncidentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchIncidentsRequest.Marshal(b, m, deterministic)
}
func (m *SearchIncidentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIncidentsRequest.Merge(m, src)
}
func (m *SearchIncidentsRequest) XXX_Size() int {
	return xxx_messageInfo_SearchIncidentsRequest.Size(m)
}
func (m *SearchIncidentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIncidentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIncidentsRequest proto.InternalMessageInfo

func (m *SearchIncidentsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *SearchIncidentsRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SearchIncidentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *SearchIncidentsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *SearchIncidentsRequest) GetTimeZone() string {
	if m != nil {
		return m.TimeZone
	}
	return ""
}

// Response for the SearchIncidents method.
type SearchIncidentsResponse struct {
	// Incidents.
	Incidents []*Incident `protobuf:"bytes,1,rep,name=incidents,proto3" json:"incidents,omitempty"`
	// Page token to fetch the next set of incidents.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchIncidentsResponse) Reset()         { *m = SearchIncidentsResponse{} }
func (m *SearchIncidentsResponse) String() string { return proto.CompactTextString(m) }
func (*SearchIncidentsResponse) ProtoMessage()    {}
func (*SearchIncidentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{19}
}

func (m *SearchIncidentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchIncidentsResponse.Unmarshal(m, b)
}
func (m *SearchIncidentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchIncidentsResponse.Marshal(b, m, deterministic)
}
func (m *SearchIncidentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchIncidentsResponse.Merge(m, src)
}
func (m *SearchIncidentsResponse) XXX_Size() int {
	return xxx_messageInfo_SearchIncidentsResponse.Size(m)
}
func (m *SearchIncidentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchIncidentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchIncidentsResponse proto.InternalMessageInfo

func (m *SearchIncidentsResponse) GetIncidents() []*Incident {
	if m != nil {
		return m.Incidents
	}
	return nil
}

func (m *SearchIncidentsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request to escalate an incident.
type EscalateIncidentRequest struct {
	// Required. The incident to escalate with the new values.
	Incident *Incident `protobuf:"bytes,1,opt,name=incident,proto3" json:"incident,omitempty"`
	// List of fields that should be updated.
	UpdateMask *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// Subscriptions to add or update. Existing subscriptions with the same
	// channel and address as a subscription in the list will be updated.
	Subscriptions []*Subscription `protobuf:"bytes,3,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	// Tags to add. Tags identical to existing tags will be ignored.
	Tags []*Tag `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	// Roles to add or update. Existing roles with the same type (and title, for
	// TYPE_OTHER roles) will be updated.
	Roles []*IncidentRoleAssignment `protobuf:"bytes,5,rep,name=roles,proto3" json:"roles,omitempty"`
	// Artifacts to add. All artifacts are added without checking for duplicates.
	Artifacts            []*Artifact `protobuf:"bytes,6,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EscalateIncidentRequest) Reset()         { *m = EscalateIncidentRequest{} }
func (m *EscalateIncidentRequest) String() string { return proto.CompactTextString(m) }
func (*EscalateIncidentRequest) ProtoMessage()    {}
func (*EscalateIncidentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{20}
}

func (m *EscalateIncidentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EscalateIncidentRequest.Unmarshal(m, b)
}
func (m *EscalateIncidentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EscalateIncidentRequest.Marshal(b, m, deterministic)
}
func (m *EscalateIncidentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EscalateIncidentRequest.Merge(m, src)
}
func (m *EscalateIncidentRequest) XXX_Size() int {
	return xxx_messageInfo_EscalateIncidentRequest.Size(m)
}
func (m *EscalateIncidentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EscalateIncidentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EscalateIncidentRequest proto.InternalMessageInfo

func (m *EscalateIncidentRequest) GetIncident() *Incident {
	if m != nil {
		return m.Incident
	}
	return nil
}

func (m *EscalateIncidentRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

func (m *EscalateIncidentRequest) GetSubscriptions() []*Subscription {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

func (m *EscalateIncidentRequest) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *EscalateIncidentRequest) GetRoles() []*IncidentRoleAssignment {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *EscalateIncidentRequest) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

// Response for EscalateIncident.
type EscalateIncidentResponse struct {
	// The escalated incident.
	Incident *Incident `protobuf:"bytes,1,opt,name=incident,proto3" json:"incident,omitempty"`
	// New or modified subscriptions.
	Subscriptions []*Subscription `protobuf:"bytes,2,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	// New or modified tags.
	Tags []*Tag `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	// New or modified roles.
	Roles []*IncidentRole `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	// New or modified artifacts.
	Artifacts            []*Artifact `protobuf:"bytes,5,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EscalateIncidentResponse) Reset()         { *m = EscalateIncidentResponse{} }
func (m *EscalateIncidentResponse) String() string { return proto.CompactTextString(m) }
func (*EscalateIncidentResponse) ProtoMessage()    {}
func (*EscalateIncidentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{21}
}

func (m *EscalateIncidentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EscalateIncidentResponse.Unmarshal(m, b)
}
func (m *EscalateIncidentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EscalateIncidentResponse.Marshal(b, m, deterministic)
}
func (m *EscalateIncidentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EscalateIncidentResponse.Merge(m, src)
}
func (m *EscalateIncidentResponse) XXX_Size() int {
	return xxx_messageInfo_EscalateIncidentResponse.Size(m)
}
func (m *EscalateIncidentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EscalateIncidentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EscalateIncidentResponse proto.InternalMessageInfo

func (m *EscalateIncidentResponse) GetIncident() *Incident {
	if m != nil {
		return m.Incident
	}
	return nil
}

func (m *EscalateIncidentResponse) GetSubscriptions() []*Subscription {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

func (m *EscalateIncidentResponse) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *EscalateIncidentResponse) GetRoles() []*IncidentRole {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *EscalateIncidentResponse) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

// Request for the CreateArtifact method.
type CreateArtifactRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The artifact to create.
	Artifact             *Artifact `protobuf:"bytes,2,opt,name=artifact,proto3" json:"artifact,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateArtifactRequest) Reset()         { *m = CreateArtifactRequest{} }
func (m *CreateArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*CreateArtifactRequest) ProtoMessage()    {}
func (*CreateArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{22}
}

func (m *CreateArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateArtifactRequest.Unmarshal(m, b)
}
func (m *CreateArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateArtifactRequest.Marshal(b, m, deterministic)
}
func (m *CreateArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateArtifactRequest.Merge(m, src)
}
func (m *CreateArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_CreateArtifactRequest.Size(m)
}
func (m *CreateArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateArtifactRequest proto.InternalMessageInfo

func (m *CreateArtifactRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateArtifactRequest) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

// Request for the ListArtifacts method.
type ListArtifactsRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Number of artifacts to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from an earlier query, as returned in `next_page_token`.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArtifactsRequest) Reset()         { *m = ListArtifactsRequest{} }
func (m *ListArtifactsRequest) String() string { return proto.CompactTextString(m) }
func (*ListArtifactsRequest) ProtoMessage()    {}
func (*ListArtifactsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{23}
}

func (m *ListArtifactsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactsRequest.Unmarshal(m, b)
}
func (m *ListArtifactsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactsRequest.Marshal(b, m, deterministic)
}
func (m *ListArtifactsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactsRequest.Merge(m, src)
}
func (m *ListArtifactsRequest) XXX_Size() int {
	return xxx_messageInfo_ListArtifactsRequest.Size(m)
}
func (m *ListArtifactsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactsRequest proto.InternalMessageInfo

func (m *ListArtifactsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListArtifactsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListArtifactsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response for the ListArtifacts method.
type ListArtifactsResponse struct {
	// List of artifacts.
	Artifacts []*Artifact `protobuf:"bytes,1,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	// Page token to fetch the next set of artifacts.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListArtifactsResponse) Reset()         { *m = ListArtifactsResponse{} }
func (m *ListArtifactsResponse) String() string { return proto.CompactTextString(m) }
func (*ListArtifactsResponse) ProtoMessage()    {}
func (*ListArtifactsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{24}
}

func (m *ListArtifactsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListArtifactsResponse.Unmarshal(m, b)
}
func (m *ListArtifactsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListArtifactsResponse.Marshal(b, m, deterministic)
}
func (m *ListArtifactsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListArtifactsResponse.Merge(m, src)
}
func (m *ListArtifactsResponse) XXX_Size() int {
	return xxx_messageInfo_ListArtifactsResponse.Size(m)
}
func (m *ListArtifactsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListArtifactsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListArtifactsResponse proto.InternalMessageInfo

func (m *ListArtifactsResponse) GetArtifacts() []*Artifact {
	if m != nil {
		return m.Artifacts
	}
	return nil
}

func (m *ListArtifactsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request for the UpdateArtifact method.
type UpdateArtifactRequest struct {
	// Required. The artifact to update with the new values.
	Artifact *Artifact `protobuf:"bytes,1,opt,name=artifact,proto3" json:"artifact,omitempty"`
	// List of fields that should be updated.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateArtifactRequest) Reset()         { *m = UpdateArtifactRequest{} }
func (m *UpdateArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateArtifactRequest) ProtoMessage()    {}
func (*UpdateArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{25}
}

func (m *UpdateArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateArtifactRequest.Unmarshal(m, b)
}
func (m *UpdateArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateArtifactRequest.Marshal(b, m, deterministic)
}
func (m *UpdateArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateArtifactRequest.Merge(m, src)
}
func (m *UpdateArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateArtifactRequest.Size(m)
}
func (m *UpdateArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateArtifactRequest proto.InternalMessageInfo

func (m *UpdateArtifactRequest) GetArtifact() *Artifact {
	if m != nil {
		return m.Artifact
	}
	return nil
}

func (m *UpdateArtifactRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// Request for deleting an artifact.
type DeleteArtifactRequest struct {
	// Required. Resource name of the artifact.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteArtifactRequest) Reset()         { *m = DeleteArtifactRequest{} }
func (m *DeleteArtifactRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteArtifactRequest) ProtoMessage()    {}
func (*DeleteArtifactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{26}
}

func (m *DeleteArtifactRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteArtifactRequest.Unmarshal(m, b)
}
func (m *DeleteArtifactRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteArtifactRequest.Marshal(b, m, deterministic)
}
func (m *DeleteArtifactRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteArtifactRequest.Merge(m, src)
}
func (m *DeleteArtifactRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteArtifactRequest.Size(m)
}
func (m *DeleteArtifactRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteArtifactRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteArtifactRequest proto.InternalMessageInfo

func (m *DeleteArtifactRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// SendShiftHandoff and PreviewShiftHandoff RPC request.
type SendShiftHandoffRequest struct {
	// Required. The resource name of the Stackdriver project that the handoff is being sent
	// from. for example, `projects/{project_id_or_number}`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. Email addresses of the recipients of the handoff, for example,
	// "user@example.com". Must contain at least one entry.
	Recipients []string `protobuf:"bytes,2,rep,name=recipients,proto3" json:"recipients,omitempty"`
	// Optional. Email addresses that should be CC'd on the handoff.
	Cc []string `protobuf:"bytes,3,rep,name=cc,proto3" json:"cc,omitempty"`
	// Required. The subject of the email.
	Subject string `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	// Content type string, for example, 'text/plain' or 'text/html'.
	NotesContentType string `protobuf:"bytes,5,opt,name=notes_content_type,json=notesContentType,proto3" json:"notes_content_type,omitempty"`
	// Optional. Additional notes to be included in the handoff.
	NotesContent string `protobuf:"bytes,6,opt,name=notes_content,json=notesContent,proto3" json:"notes_content,omitempty"`
	// Optional. The set of incidents that should be included in the handoff.
	Incidents []*SendShiftHandoffRequest_Incident `protobuf:"bytes,7,rep,name=incidents,proto3" json:"incidents,omitempty"`
	// If set to true a ShiftHandoffResponse will be returned but the handoff
	// will not actually be sent.
	PreviewOnly          bool     `protobuf:"varint,8,opt,name=preview_only,json=previewOnly,proto3" json:"preview_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendShiftHandoffRequest) Reset()         { *m = SendShiftHandoffRequest{} }
func (m *SendShiftHandoffRequest) String() string { return proto.CompactTextString(m) }
func (*SendShiftHandoffRequest) ProtoMessage()    {}
func (*SendShiftHandoffRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{27}
}

func (m *SendShiftHandoffRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendShiftHandoffRequest.Unmarshal(m, b)
}
func (m *SendShiftHandoffRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendShiftHandoffRequest.Marshal(b, m, deterministic)
}
func (m *SendShiftHandoffRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendShiftHandoffRequest.Merge(m, src)
}
func (m *SendShiftHandoffRequest) XXX_Size() int {
	return xxx_messageInfo_SendShiftHandoffRequest.Size(m)
}
func (m *SendShiftHandoffRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendShiftHandoffRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendShiftHandoffRequest proto.InternalMessageInfo

func (m *SendShiftHandoffRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *SendShiftHandoffRequest) GetRecipients() []string {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *SendShiftHandoffRequest) GetCc() []string {
	if m != nil {
		return m.Cc
	}
	return nil
}

func (m *SendShiftHandoffRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *SendShiftHandoffRequest) GetNotesContentType() string {
	if m != nil {
		return m.NotesContentType
	}
	return ""
}

func (m *SendShiftHandoffRequest) GetNotesContent() string {
	if m != nil {
		return m.NotesContent
	}
	return ""
}

func (m *SendShiftHandoffRequest) GetIncidents() []*SendShiftHandoffRequest_Incident {
	if m != nil {
		return m.Incidents
	}
	return nil
}

func (m *SendShiftHandoffRequest) GetPreviewOnly() bool {
	if m != nil {
		return m.PreviewOnly
	}
	return false
}

// Describes an incident for inclusion in the handoff.
// This is wrapped in a message to provide flexibility for potentially
// attaching additional data to each incident in the future.
type SendShiftHandoffRequest_Incident struct {
	// Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendShiftHandoffRequest_Incident) Reset()         { *m = SendShiftHandoffRequest_Incident{} }
func (m *SendShiftHandoffRequest_Incident) String() string { return proto.CompactTextString(m) }
func (*SendShiftHandoffRequest_Incident) ProtoMessage()    {}
func (*SendShiftHandoffRequest_Incident) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{27, 0}
}

func (m *SendShiftHandoffRequest_Incident) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendShiftHandoffRequest_Incident.Unmarshal(m, b)
}
func (m *SendShiftHandoffRequest_Incident) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendShiftHandoffRequest_Incident.Marshal(b, m, deterministic)
}
func (m *SendShiftHandoffRequest_Incident) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendShiftHandoffRequest_Incident.Merge(m, src)
}
func (m *SendShiftHandoffRequest_Incident) XXX_Size() int {
	return xxx_messageInfo_SendShiftHandoffRequest_Incident.Size(m)
}
func (m *SendShiftHandoffRequest_Incident) XXX_DiscardUnknown() {
	xxx_messageInfo_SendShiftHandoffRequest_Incident.DiscardUnknown(m)
}

var xxx_messageInfo_SendShiftHandoffRequest_Incident proto.InternalMessageInfo

func (m *SendShiftHandoffRequest_Incident) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// SendShiftHandoff and PreviewShiftHandoff RPC response.
type SendShiftHandoffResponse struct {
	// Content type string, for example, 'text/plain' or 'text/html'.
	ContentType string `protobuf:"bytes,1,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	// The contents of the handoff that was sent or would have been sent (if the
	// request was preview_only).
	// This will typically contain a full HTML document.
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendShiftHandoffResponse) Reset()         { *m = SendShiftHandoffResponse{} }
func (m *SendShiftHandoffResponse) String() string { return proto.CompactTextString(m) }
func (*SendShiftHandoffResponse) ProtoMessage()    {}
func (*SendShiftHandoffResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{28}
}

func (m *SendShiftHandoffResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendShiftHandoffResponse.Unmarshal(m, b)
}
func (m *SendShiftHandoffResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendShiftHandoffResponse.Marshal(b, m, deterministic)
}
func (m *SendShiftHandoffResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendShiftHandoffResponse.Merge(m, src)
}
func (m *SendShiftHandoffResponse) XXX_Size() int {
	return xxx_messageInfo_SendShiftHandoffResponse.Size(m)
}
func (m *SendShiftHandoffResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendShiftHandoffResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendShiftHandoffResponse proto.InternalMessageInfo

func (m *SendShiftHandoffResponse) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *SendShiftHandoffResponse) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// Request for the CreateSubscription method.
type CreateSubscriptionRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. The subscription to create.
	Subscription         *Subscription `protobuf:"bytes,2,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateSubscriptionRequest) Reset()         { *m = CreateSubscriptionRequest{} }
func (m *CreateSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSubscriptionRequest) ProtoMessage()    {}
func (*CreateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{29}
}

func (m *CreateSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubscriptionRequest.Unmarshal(m, b)
}
func (m *CreateSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *CreateSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubscriptionRequest.Merge(m, src)
}
func (m *CreateSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSubscriptionRequest.Size(m)
}
func (m *CreateSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubscriptionRequest proto.InternalMessageInfo

func (m *CreateSubscriptionRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateSubscriptionRequest) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

// Request for the UpdateSubscription method.
type UpdateSubscriptionRequest struct {
	// Required. The subscription to update, with new values.
	Subscription *Subscription `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
	// List of fields that should be updated.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateSubscriptionRequest) Reset()         { *m = UpdateSubscriptionRequest{} }
func (m *UpdateSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSubscriptionRequest) ProtoMessage()    {}
func (*UpdateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{30}
}

func (m *UpdateSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubscriptionRequest.Unmarshal(m, b)
}
func (m *UpdateSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubscriptionRequest.Merge(m, src)
}
func (m *UpdateSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSubscriptionRequest.Size(m)
}
func (m *UpdateSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubscriptionRequest proto.InternalMessageInfo

func (m *UpdateSubscriptionRequest) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

func (m *UpdateSubscriptionRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// Request for the ListSubscriptions method.
type ListSubscriptionsRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Number of subscriptions to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from an earlier query, as returned in `next_page_token`.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSubscriptionsRequest) Reset()         { *m = ListSubscriptionsRequest{} }
func (m *ListSubscriptionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListSubscriptionsRequest) ProtoMessage()    {}
func (*ListSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{31}
}

func (m *ListSubscriptionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSubscriptionsRequest.Unmarshal(m, b)
}
func (m *ListSubscriptionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSubscriptionsRequest.Marshal(b, m, deterministic)
}
func (m *ListSubscriptionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSubscriptionsRequest.Merge(m, src)
}
func (m *ListSubscriptionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListSubscriptionsRequest.Size(m)
}
func (m *ListSubscriptionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSubscriptionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListSubscriptionsRequest proto.InternalMessageInfo

func (m *ListSubscriptionsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListSubscriptionsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListSubscriptionsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response for the ListSubscriptions method.
type ListSubscriptionsResponse struct {
	// List of subscriptions.
	Subscriptions []*Subscription `protobuf:"bytes,1,rep,name=subscriptions,proto3" json:"subscriptions,omitempty"`
	// Page token to fetch the next set of subscriptions.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListSubscriptionsResponse) Reset()         { *m = ListSubscriptionsResponse{} }
func (m *ListSubscriptionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListSubscriptionsResponse) ProtoMessage()    {}
func (*ListSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{32}
}

func (m *ListSubscriptionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListSubscriptionsResponse.Unmarshal(m, b)
}
func (m *ListSubscriptionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListSubscriptionsResponse.Marshal(b, m, deterministic)
}
func (m *ListSubscriptionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListSubscriptionsResponse.Merge(m, src)
}
func (m *ListSubscriptionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListSubscriptionsResponse.Size(m)
}
func (m *ListSubscriptionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListSubscriptionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListSubscriptionsResponse proto.InternalMessageInfo

func (m *ListSubscriptionsResponse) GetSubscriptions() []*Subscription {
	if m != nil {
		return m.Subscriptions
	}
	return nil
}

func (m *ListSubscriptionsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request for deleting a subscription.
type DeleteSubscriptionRequest struct {
	// Required. Resource name of the subscription.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubscriptionRequest) Reset()         { *m = DeleteSubscriptionRequest{} }
func (m *DeleteSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSubscriptionRequest) ProtoMessage()    {}
func (*DeleteSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{33}
}

func (m *DeleteSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubscriptionRequest.Unmarshal(m, b)
}
func (m *DeleteSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubscriptionRequest.Merge(m, src)
}
func (m *DeleteSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSubscriptionRequest.Size(m)
}
func (m *DeleteSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubscriptionRequest proto.InternalMessageInfo

func (m *DeleteSubscriptionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request for creating a role assignment.
type CreateIncidentRoleAssignmentRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Required. Role assignment to create.
	IncidentRoleAssignment *IncidentRoleAssignment `protobuf:"bytes,2,opt,name=incident_role_assignment,json=incidentRoleAssignment,proto3" json:"incident_role_assignment,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *CreateIncidentRoleAssignmentRequest) Reset()         { *m = CreateIncidentRoleAssignmentRequest{} }
func (m *CreateIncidentRoleAssignmentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIncidentRoleAssignmentRequest) ProtoMessage()    {}
func (*CreateIncidentRoleAssignmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{34}
}

func (m *CreateIncidentRoleAssignmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIncidentRoleAssignmentRequest.Unmarshal(m, b)
}
func (m *CreateIncidentRoleAssignmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIncidentRoleAssignmentRequest.Marshal(b, m, deterministic)
}
func (m *CreateIncidentRoleAssignmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIncidentRoleAssignmentRequest.Merge(m, src)
}
func (m *CreateIncidentRoleAssignmentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIncidentRoleAssignmentRequest.Size(m)
}
func (m *CreateIncidentRoleAssignmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIncidentRoleAssignmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIncidentRoleAssignmentRequest proto.InternalMessageInfo

func (m *CreateIncidentRoleAssignmentRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateIncidentRoleAssignmentRequest) GetIncidentRoleAssignment() *IncidentRoleAssignment {
	if m != nil {
		return m.IncidentRoleAssignment
	}
	return nil
}

// Request for deleting a role assignment.
type DeleteIncidentRoleAssignmentRequest struct {
	// Required. Resource name of the role assignment.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIncidentRoleAssignmentRequest) Reset()         { *m = DeleteIncidentRoleAssignmentRequest{} }
func (m *DeleteIncidentRoleAssignmentRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIncidentRoleAssignmentRequest) ProtoMessage()    {}
func (*DeleteIncidentRoleAssignmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{35}
}

func (m *DeleteIncidentRoleAssignmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIncidentRoleAssignmentRequest.Unmarshal(m, b)
}
func (m *DeleteIncidentRoleAssignmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIncidentRoleAssignmentRequest.Marshal(b, m, deterministic)
}
func (m *DeleteIncidentRoleAssignmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIncidentRoleAssignmentRequest.Merge(m, src)
}
func (m *DeleteIncidentRoleAssignmentRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIncidentRoleAssignmentRequest.Size(m)
}
func (m *DeleteIncidentRoleAssignmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIncidentRoleAssignmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIncidentRoleAssignmentRequest proto.InternalMessageInfo

func (m *DeleteIncidentRoleAssignmentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request to list role assignments of an incident.
type ListIncidentRoleAssignmentsRequest struct {
	// Required. Resource name of the incident, for example,
	// "projects/{project_id_or_number}/incidents/{incident_id}".
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Number of assignments to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Page token from an earlier query, as returned in `next_page_token`.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIncidentRoleAssignmentsRequest) Reset()         { *m = ListIncidentRoleAssignmentsRequest{} }
func (m *ListIncidentRoleAssignmentsRequest) String() string { return proto.CompactTextString(m) }
func (*ListIncidentRoleAssignmentsRequest) ProtoMessage()    {}
func (*ListIncidentRoleAssignmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{36}
}

func (m *ListIncidentRoleAssignmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIncidentRoleAssignmentsRequest.Unmarshal(m, b)
}
func (m *ListIncidentRoleAssignmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIncidentRoleAssignmentsRequest.Marshal(b, m, deterministic)
}
func (m *ListIncidentRoleAssignmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIncidentRoleAssignmentsRequest.Merge(m, src)
}
func (m *ListIncidentRoleAssignmentsRequest) XXX_Size() int {
	return xxx_messageInfo_ListIncidentRoleAssignmentsRequest.Size(m)
}
func (m *ListIncidentRoleAssignmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIncidentRoleAssignmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListIncidentRoleAssignmentsRequest proto.InternalMessageInfo

func (m *ListIncidentRoleAssignmentsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListIncidentRoleAssignmentsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListIncidentRoleAssignmentsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response for the ListIncidentRoleAssignments method.
type ListIncidentRoleAssignmentsResponse struct {
	// List of assignments.
	IncidentRoleAssignments []*IncidentRoleAssignment `protobuf:"bytes,1,rep,name=incident_role_assignments,json=incidentRoleAssignments,proto3" json:"incident_role_assignments,omitempty"`
	// Page token to fetch the next set of assignments.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListIncidentRoleAssignmentsResponse) Reset()         { *m = ListIncidentRoleAssignmentsResponse{} }
func (m *ListIncidentRoleAssignmentsResponse) String() string { return proto.CompactTextString(m) }
func (*ListIncidentRoleAssignmentsResponse) ProtoMessage()    {}
func (*ListIncidentRoleAssignmentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{37}
}

func (m *ListIncidentRoleAssignmentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListIncidentRoleAssignmentsResponse.Unmarshal(m, b)
}
func (m *ListIncidentRoleAssignmentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListIncidentRoleAssignmentsResponse.Marshal(b, m, deterministic)
}
func (m *ListIncidentRoleAssignmentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListIncidentRoleAssignmentsResponse.Merge(m, src)
}
func (m *ListIncidentRoleAssignmentsResponse) XXX_Size() int {
	return xxx_messageInfo_ListIncidentRoleAssignmentsResponse.Size(m)
}
func (m *ListIncidentRoleAssignmentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListIncidentRoleAssignmentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListIncidentRoleAssignmentsResponse proto.InternalMessageInfo

func (m *ListIncidentRoleAssignmentsResponse) GetIncidentRoleAssignments() []*IncidentRoleAssignment {
	if m != nil {
		return m.IncidentRoleAssignments
	}
	return nil
}

func (m *ListIncidentRoleAssignmentsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request to start a role handover.
type RequestIncidentRoleHandoverRequest struct {
	// Required. Resource name of the role assignment.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The proposed assignee.
	NewAssignee          *User    `protobuf:"bytes,2,opt,name=new_assignee,json=newAssignee,proto3" json:"new_assignee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestIncidentRoleHandoverRequest) Reset()         { *m = RequestIncidentRoleHandoverRequest{} }
func (m *RequestIncidentRoleHandoverRequest) String() string { return proto.CompactTextString(m) }
func (*RequestIncidentRoleHandoverRequest) ProtoMessage()    {}
func (*RequestIncidentRoleHandoverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{38}
}

func (m *RequestIncidentRoleHandoverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestIncidentRoleHandoverRequest.Unmarshal(m, b)
}
func (m *RequestIncidentRoleHandoverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestIncidentRoleHandoverRequest.Marshal(b, m, deterministic)
}
func (m *RequestIncidentRoleHandoverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestIncidentRoleHandoverRequest.Merge(m, src)
}
func (m *RequestIncidentRoleHandoverRequest) XXX_Size() int {
	return xxx_messageInfo_RequestIncidentRoleHandoverRequest.Size(m)
}
func (m *RequestIncidentRoleHandoverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestIncidentRoleHandoverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequestIncidentRoleHandoverRequest proto.InternalMessageInfo

func (m *RequestIncidentRoleHandoverRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RequestIncidentRoleHandoverRequest) GetNewAssignee() *User {
	if m != nil {
		return m.NewAssignee
	}
	return nil
}

// Request to confirm a role handover.
type ConfirmIncidentRoleHandoverRequest struct {
	// Required. Resource name of the role assignment.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The proposed assignee, who will now be the assignee. This should be the
	// current user; otherwise ForceRoleHandover should be called.
	NewAssignee          *User    `protobuf:"bytes,2,opt,name=new_assignee,json=newAssignee,proto3" json:"new_assignee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmIncidentRoleHandoverRequest) Reset()         { *m = ConfirmIncidentRoleHandoverRequest{} }
func (m *ConfirmIncidentRoleHandoverRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmIncidentRoleHandoverRequest) ProtoMessage()    {}
func (*ConfirmIncidentRoleHandoverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{39}
}

func (m *ConfirmIncidentRoleHandoverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmIncidentRoleHandoverRequest.Unmarshal(m, b)
}
func (m *ConfirmIncidentRoleHandoverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmIncidentRoleHandoverRequest.Marshal(b, m, deterministic)
}
func (m *ConfirmIncidentRoleHandoverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmIncidentRoleHandoverRequest.Merge(m, src)
}
func (m *ConfirmIncidentRoleHandoverRequest) XXX_Size() int {
	return xxx_messageInfo_ConfirmIncidentRoleHandoverRequest.Size(m)
}
func (m *ConfirmIncidentRoleHandoverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmIncidentRoleHandoverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmIncidentRoleHandoverRequest proto.InternalMessageInfo

func (m *ConfirmIncidentRoleHandoverRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ConfirmIncidentRoleHandoverRequest) GetNewAssignee() *User {
	if m != nil {
		return m.NewAssignee
	}
	return nil
}

// Request to force a role handover.
type ForceIncidentRoleHandoverRequest struct {
	// Required. Resource name of the role assignment.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. The proposed assignee, who will now be the assignee. This should not be
	// the current user; otherwise ConfirmRoleHandover should be called.
	NewAssignee          *User    `protobuf:"bytes,2,opt,name=new_assignee,json=newAssignee,proto3" json:"new_assignee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForceIncidentRoleHandoverRequest) Reset()         { *m = ForceIncidentRoleHandoverRequest{} }
func (m *ForceIncidentRoleHandoverRequest) String() string { return proto.CompactTextString(m) }
func (*ForceIncidentRoleHandoverRequest) ProtoMessage()    {}
func (*ForceIncidentRoleHandoverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{40}
}

func (m *ForceIncidentRoleHandoverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForceIncidentRoleHandoverRequest.Unmarshal(m, b)
}
func (m *ForceIncidentRoleHandoverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForceIncidentRoleHandoverRequest.Marshal(b, m, deterministic)
}
func (m *ForceIncidentRoleHandoverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForceIncidentRoleHandoverRequest.Merge(m, src)
}
func (m *ForceIncidentRoleHandoverRequest) XXX_Size() int {
	return xxx_messageInfo_ForceIncidentRoleHandoverRequest.Size(m)
}
func (m *ForceIncidentRoleHandoverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForceIncidentRoleHandoverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForceIncidentRoleHandoverRequest proto.InternalMessageInfo

func (m *ForceIncidentRoleHandoverRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ForceIncidentRoleHandoverRequest) GetNewAssignee() *User {
	if m != nil {
		return m.NewAssignee
	}
	return nil
}

// Request to cancel a role handover.
type CancelIncidentRoleHandoverRequest struct {
	// Required. Resource name of the role assignment.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Required. Person who was proposed as the next assignee (i.e.
	// IncidentRoleAssignment.proposed_assignee) and whose proposal is being
	// cancelled.
	NewAssignee          *User    `protobuf:"bytes,2,opt,name=new_assignee,json=newAssignee,proto3" json:"new_assignee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelIncidentRoleHandoverRequest) Reset()         { *m = CancelIncidentRoleHandoverRequest{} }
func (m *CancelIncidentRoleHandoverRequest) String() string { return proto.CompactTextString(m) }
func (*CancelIncidentRoleHandoverRequest) ProtoMessage()    {}
func (*CancelIncidentRoleHandoverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_701d4f44dccb3929, []int{41}
}

func (m *CancelIncidentRoleHandoverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelIncidentRoleHandoverRequest.Unmarshal(m, b)
}
func (m *CancelIncidentRoleHandoverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelIncidentRoleHandoverRequest.Marshal(b, m, deterministic)
}
func (m *CancelIncidentRoleHandoverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelIncidentRoleHandoverRequest.Merge(m, src)
}
func (m *CancelIncidentRoleHandoverRequest) XXX_Size() int {
	return xxx_messageInfo_CancelIncidentRoleHandoverRequest.Size(m)
}
func (m *CancelIncidentRoleHandoverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelIncidentRoleHandoverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelIncidentRoleHandoverRequest proto.InternalMessageInfo

func (m *CancelIncidentRoleHandoverRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CancelIncidentRoleHandoverRequest) GetNewAssignee() *User {
	if m != nil {
		return m.NewAssignee
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateIncidentRequest)(nil), "google.cloud.irm.v1alpha2.CreateIncidentRequest")
	proto.RegisterType((*GetIncidentRequest)(nil), "google.cloud.irm.v1alpha2.GetIncidentRequest")
	proto.RegisterType((*UpdateIncidentRequest)(nil), "google.cloud.irm.v1alpha2.UpdateIncidentRequest")
	proto.RegisterType((*SearchSimilarIncidentsRequest)(nil), "google.cloud.irm.v1alpha2.SearchSimilarIncidentsRequest")
	proto.RegisterType((*SearchSimilarIncidentsResponse)(nil), "google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse")
	proto.RegisterType((*SearchSimilarIncidentsResponse_Result)(nil), "google.cloud.irm.v1alpha2.SearchSimilarIncidentsResponse.Result")
	proto.RegisterType((*CreateAnnotationRequest)(nil), "google.cloud.irm.v1alpha2.CreateAnnotationRequest")
	proto.RegisterType((*ListAnnotationsRequest)(nil), "google.cloud.irm.v1alpha2.ListAnnotationsRequest")
	proto.RegisterType((*ListAnnotationsResponse)(nil), "google.cloud.irm.v1alpha2.ListAnnotationsResponse")
	proto.RegisterType((*CreateTagRequest)(nil), "google.cloud.irm.v1alpha2.CreateTagRequest")
	proto.RegisterType((*DeleteTagRequest)(nil), "google.cloud.irm.v1alpha2.DeleteTagRequest")
	proto.RegisterType((*ListTagsRequest)(nil), "google.cloud.irm.v1alpha2.ListTagsRequest")
	proto.RegisterType((*ListTagsResponse)(nil), "google.cloud.irm.v1alpha2.ListTagsResponse")
	proto.RegisterType((*CreateSignalRequest)(nil), "google.cloud.irm.v1alpha2.CreateSignalRequest")
	proto.RegisterType((*SearchSignalsRequest)(nil), "google.cloud.irm.v1alpha2.SearchSignalsRequest")
	proto.RegisterType((*SearchSignalsResponse)(nil), "google.cloud.irm.v1alpha2.SearchSignalsResponse")
	proto.RegisterType((*GetSignalRequest)(nil), "google.cloud.irm.v1alpha2.GetSignalRequest")
	proto.RegisterType((*LookupSignalRequest)(nil), "google.cloud.irm.v1alpha2.LookupSignalRequest")
	proto.RegisterType((*UpdateSignalRequest)(nil), "google.cloud.irm.v1alpha2.UpdateSignalRequest")
	proto.RegisterType((*SearchIncidentsRequest)(nil), "google.cloud.irm.v1alpha2.SearchIncidentsRequest")
	proto.RegisterType((*SearchIncidentsResponse)(nil), "google.cloud.irm.v1alpha2.SearchIncidentsResponse")
	proto.RegisterType((*EscalateIncidentRequest)(nil), "google.cloud.irm.v1alpha2.EscalateIncidentRequest")
	proto.RegisterType((*EscalateIncidentResponse)(nil), "google.cloud.irm.v1alpha2.EscalateIncidentResponse")
	proto.RegisterType((*CreateArtifactRequest)(nil), "google.cloud.irm.v1alpha2.CreateArtifactRequest")
	proto.RegisterType((*ListArtifactsRequest)(nil), "google.cloud.irm.v1alpha2.ListArtifactsRequest")
	proto.RegisterType((*ListArtifactsResponse)(nil), "google.cloud.irm.v1alpha2.ListArtifactsResponse")
	proto.RegisterType((*UpdateArtifactRequest)(nil), "google.cloud.irm.v1alpha2.UpdateArtifactRequest")
	proto.RegisterType((*DeleteArtifactRequest)(nil), "google.cloud.irm.v1alpha2.DeleteArtifactRequest")
	proto.RegisterType((*SendShiftHandoffRequest)(nil), "google.cloud.irm.v1alpha2.SendShiftHandoffRequest")
	proto.RegisterType((*SendShiftHandoffRequest_Incident)(nil), "google.cloud.irm.v1alpha2.SendShiftHandoffRequest.Incident")
	proto.RegisterType((*SendShiftHandoffResponse)(nil), "google.cloud.irm.v1alpha2.SendShiftHandoffResponse")
	proto.RegisterType((*CreateSubscriptionRequest)(nil), "google.cloud.irm.v1alpha2.CreateSubscriptionRequest")
	proto.RegisterType((*UpdateSubscriptionRequest)(nil), "google.cloud.irm.v1alpha2.UpdateSubscriptionRequest")
	proto.RegisterType((*ListSubscriptionsRequest)(nil), "google.cloud.irm.v1alpha2.ListSubscriptionsRequest")
	proto.RegisterType((*ListSubscriptionsResponse)(nil), "google.cloud.irm.v1alpha2.ListSubscriptionsResponse")
	proto.RegisterType((*DeleteSubscriptionRequest)(nil), "google.cloud.irm.v1alpha2.DeleteSubscriptionRequest")
	proto.RegisterType((*CreateIncidentRoleAssignmentRequest)(nil), "google.cloud.irm.v1alpha2.CreateIncidentRoleAssignmentRequest")
	proto.RegisterType((*DeleteIncidentRoleAssignmentRequest)(nil), "google.cloud.irm.v1alpha2.DeleteIncidentRoleAssignmentRequest")
	proto.RegisterType((*ListIncidentRoleAssignmentsRequest)(nil), "google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsRequest")
	proto.RegisterType((*ListIncidentRoleAssignmentsResponse)(nil), "google.cloud.irm.v1alpha2.ListIncidentRoleAssignmentsResponse")
	proto.RegisterType((*RequestIncidentRoleHandoverRequest)(nil), "google.cloud.irm.v1alpha2.RequestIncidentRoleHandoverRequest")
	proto.RegisterType((*ConfirmIncidentRoleHandoverRequest)(nil), "google.cloud.irm.v1alpha2.ConfirmIncidentRoleHandoverRequest")
	proto.RegisterType((*ForceIncidentRoleHandoverRequest)(nil), "google.cloud.irm.v1alpha2.ForceIncidentRoleHandoverRequest")
	proto.RegisterType((*CancelIncidentRoleHandoverRequest)(nil), "google.cloud.irm.v1alpha2.CancelIncidentRoleHandoverRequest")
}

func init() {
	proto.RegisterFile("google/cloud/irm/v1alpha2/incidents_service.proto", fileDescriptor_701d4f44dccb3929)
}

var fileDescriptor_701d4f44dccb3929 = []byte{
	// 2827 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x5b, 0x4f, 0x6c, 0x1c, 0x57,
	0x19, 0xef, 0xb3, 0x63, 0xc7, 0xfe, 0x6c, 0xc7, 0xee, 0x4b, 0x62, 0xaf, 0xd7, 0x4d, 0x63, 0x8f,
	0x55, 0x92, 0x3a, 0xee, 0x6e, 0xb2, 0x8e, 0x1b, 0x62, 0x27, 0x69, 0xc7, 0x76, 0x6c, 0xa7, 0x6d,
	0xda, 0xb0, 0x76, 0x55, 0x88, 0x44, 0x57, 0x93, 0xd9, 0xb7, 0xeb, 0x21, 0xbb, 0x33, 0xdb, 0x99,
	0x59, 0x1b, 0x17, 0x7a, 0x29, 0x15, 0x87, 0x0a, 0xa9, 0xea, 0x9f, 0x0b, 0x95, 0xe0, 0x50, 0x71,
	0x40, 0xe1, 0x06, 0x45, 0x80, 0xc4, 0x01, 0x38, 0x01, 0x42, 0x1c, 0xa0, 0x07, 0xb4, 0xe2, 0x90,
	0x03, 0x07, 0xc4, 0x85, 0x03, 0x12, 0x02, 0x4e, 0x68, 0xde, 0x7b, 0xb3, 0xf3, 0x66, 0x77, 0xf6,
	0xed, 0xec, 0xda, 0x51, 0xd2, 0x5b, 0x76, 0xe6, 0x7d, 0xef, 0xfd, 0xbe, 0xef, 0xf7, 0xfd, 0x79,
	0xf3, 0x7d, 0x31, 0x5c, 0x28, 0x5a, 0x56, 0xb1, 0x44, 0xd2, 0x7a, 0xc9, 0xaa, 0xe6, 0xd3, 0x86,
	0x5d, 0x4e, 0xef, 0x5e, 0xd0, 0x4a, 0x95, 0x1d, 0x2d, 0x93, 0x36, 0x4c, 0xdd, 0xc8, 0x13, 0xd3,
	0x75, 0x72, 0x0e, 0xb1, 0x77, 0x0d, 0x9d, 0xa4, 0x2a, 0xb6, 0xe5, 0x5a, 0x78, 0x92, 0x89, 0xa4,
	0xa8, 0x48, 0xca, 0xb0, 0xcb, 0x29, 0x5f, 0x24, 0xf9, 0x04, 0xdf, 0x4d, 0xab, 0x18, 0x69, 0xcd,
	0x34, 0x2d, 0x57, 0x73, 0x0d, 0xcb, 0x74, 0x98, 0x60, 0x72, 0x42, 0x78, 0xab, 0x97, 0x0c, 0x62,
	0xba, 0xfc, 0xc5, 0x69, 0xe1, 0x45, 0xc1, 0x20, 0xa5, 0x7c, 0xee, 0x0e, 0xd9, 0xd1, 0x76, 0x0d,
	0xcb, 0xe6, 0x0b, 0x26, 0x85, 0x05, 0x36, 0x71, 0xac, 0xaa, 0xed, 0xa3, 0x49, 0x3e, 0x1d, 0x43,
	0x01, 0xbe, 0x74, 0x8a, 0x2f, 0xa5, 0xbf, 0xee, 0x54, 0x0b, 0x69, 0x52, 0xae, 0xb8, 0xfb, 0xfc,
	0xe5, 0x74, 0xe3, 0x4b, 0x06, 0xa4, 0xac, 0x39, 0x77, 0x1b, 0x50, 0xd6, 0x57, 0xb8, 0x46, 0x99,
	0x38, 0xae, 0x56, 0xae, 0xb0, 0x05, 0xca, 0x3d, 0x04, 0x27, 0x57, 0x6d, 0xa2, 0xb9, 0xe4, 0x06,
	0x3f, 0x39, 0x4b, 0xde, 0xa8, 0x12, 0xc7, 0xc5, 0x6b, 0x30, 0xe0, 0x83, 0x49, 0xa0, 0x69, 0x74,
	0x76, 0x28, 0x33, 0x9b, 0x6a, 0x69, 0xc5, 0x94, 0x2f, 0xbd, 0xd2, 0x7b, 0x5f, 0xed, 0xc9, 0xd6,
	0x25, 0xf1, 0x8b, 0xd0, 0x5f, 0xd1, 0x6c, 0x6f, 0x8f, 0x9e, 0x69, 0x74, 0x76, 0x70, 0x65, 0xe1,
	0xbe, 0xda, 0xf3, 0x3f, 0xf5, 0x19, 0x38, 0x47, 0xf7, 0xf0, 0xed, 0x52, 0xd6, 0x4c, 0xad, 0x48,
	0x6c, 0xbe, 0xbf, 0x56, 0x31, 0x9c, 0x94, 0x6e, 0x95, 0xd3, 0xb7, 0x6c, 0xeb, 0x6b, 0x44, 0x77,
	0xb3, 0x7c, 0x0b, 0xe5, 0x26, 0xe0, 0x0d, 0xe2, 0x36, 0x02, 0xbd, 0x04, 0x47, 0x4c, 0xad, 0x4c,
	0x28, 0xc8, 0xc1, 0x95, 0x59, 0x7a, 0xc0, 0x29, 0x98, 0xf2, 0xe0, 0x35, 0xec, 0x57, 0x97, 0xa4,
	0x02, 0xca, 0xc7, 0x08, 0x4e, 0xbe, 0x5a, 0xc9, 0x3f, 0x30, 0xdd, 0x97, 0x61, 0xa8, 0x4a, 0xb7,
	0xa7, 0x8c, 0x50, 0x03, 0x0c, 0x65, 0x92, 0xfe, 0x46, 0x3e, 0x25, 0xa9, 0x75, 0x8f, 0xb4, 0x9b,
	0x9a, 0x73, 0x37, 0x0b, 0x6c, 0xb9, 0xf7, 0x6f, 0xe5, 0x23, 0x04, 0xa7, 0xb6, 0x88, 0x66, 0xeb,
	0x3b, 0x5b, 0x46, 0xd9, 0x28, 0x69, 0xb6, 0x7f, 0x8a, 0x73, 0x50, 0xbd, 0xf1, 0x14, 0x0c, 0x56,
	0xb4, 0x22, 0xc9, 0x39, 0xc6, 0x9b, 0x84, 0xa2, 0xea, 0xcb, 0x0e, 0x78, 0x0f, 0xb6, 0x8c, 0x37,
	0x09, 0x3e, 0x05, 0x40, 0x5f, 0xba, 0xd6, 0x5d, 0x62, 0x26, 0x7a, 0xbd, 0xbd, 0xb3, 0x74, 0xf9,
	0xb6, 0xf7, 0x40, 0xf9, 0x27, 0x82, 0x27, 0x5b, 0xc1, 0x72, 0x2a, 0x96, 0xe9, 0x10, 0x7c, 0x1b,
	0x8e, 0xda, 0xc4, 0xa9, 0x96, 0x5c, 0x27, 0x81, 0xa6, 0x7b, 0xcf, 0x0e, 0x65, 0x9e, 0x97, 0xd8,
	0x4e, 0xbe, 0x57, 0x2a, 0x4b, 0x37, 0xca, 0xfa, 0x1b, 0xe2, 0x2f, 0xc0, 0xa8, 0x49, 0xbe, 0xee,
	0xe6, 0x04, 0x88, 0xd4, 0xaf, 0xb2, 0x23, 0xde, 0xe3, 0x5b, 0x3e, 0xcc, 0xe4, 0x0d, 0xe8, 0x67,
	0xa2, 0xf8, 0xb9, 0xae, 0xa8, 0x0c, 0x58, 0x54, 0x3e, 0x41, 0x30, 0xc1, 0x22, 0x44, 0xad, 0x67,
	0x07, 0x9f, 0x82, 0xe5, 0xba, 0x77, 0x77, 0x40, 0x02, 0x17, 0xc1, 0x2f, 0x00, 0x04, 0xf9, 0x86,
	0x7b, 0xc7, 0x53, 0x12, 0x6c, 0xc1, 0xf1, 0xcc, 0xd1, 0x04, 0x69, 0xe5, 0x7d, 0x04, 0xe3, 0x2f,
	0x19, 0x8e, 0x1b, 0xac, 0x71, 0x0e, 0x05, 0xe3, 0x41, 0x5c, 0xe5, 0x5d, 0x04, 0x13, 0x4d, 0x98,
	0xb8, 0x8f, 0x6c, 0xc0, 0x90, 0x90, 0x6b, 0xb9, 0x9f, 0xc4, 0x53, 0x3e, 0x2b, 0x4a, 0xc6, 0x75,
	0x08, 0xe5, 0xdb, 0x08, 0xc6, 0x18, 0x8b, 0xdb, 0x5a, 0xf1, 0x50, 0x4c, 0xb3, 0x08, 0xbd, 0xae,
	0x56, 0xe4, 0xbc, 0x3d, 0x29, 0x81, 0xbe, 0xad, 0x15, 0x19, 0x61, 0xde, 0x7a, 0x65, 0x1d, 0xc6,
	0xd6, 0x48, 0x89, 0x84, 0x70, 0x64, 0x42, 0x91, 0xfc, 0x24, 0x45, 0x91, 0x80, 0xf1, 0x08, 0x14,
	0x9e, 0x10, 0x4b, 0x5e, 0xef, 0x22, 0x18, 0xf5, 0xac, 0xbb, 0xad, 0x15, 0x1f, 0x3e, 0xd5, 0x26,
	0x8c, 0x05, 0x58, 0x38, 0xc5, 0x19, 0x38, 0xe2, 0x6a, 0x45, 0x9f, 0xdb, 0x36, 0x06, 0xca, 0xd2,
	0xb5, 0xb1, 0xd9, 0xfc, 0x04, 0xc1, 0x71, 0xc6, 0xe6, 0x96, 0x51, 0x34, 0xb5, 0x92, 0x6f, 0x80,
	0x17, 0x1b, 0x0c, 0x70, 0x90, 0x6a, 0x83, 0xaf, 0x41, 0xbf, 0x43, 0x77, 0xe7, 0x1c, 0xcf, 0xc8,
	0xd2, 0x18, 0x5d, 0xc8, 0x68, 0xe6, 0x52, 0xca, 0x4f, 0x11, 0x9c, 0xf0, 0xd3, 0x9b, 0xf7, 0xc0,
	0x79, 0x20, 0x28, 0x4f, 0x40, 0xdf, 0x1b, 0x55, 0x62, 0xef, 0x73, 0x43, 0xb1, 0x1f, 0x61, 0x32,
	0x7b, 0xa5, 0x64, 0x1e, 0x69, 0x24, 0xf3, 0x9b, 0x70, 0xb2, 0x01, 0x36, 0x67, 0x74, 0x19, 0x8e,
	0x32, 0xd5, 0x7c, 0x52, 0xdb, 0x5b, 0x24, 0xeb, 0x4b, 0xc4, 0xa6, 0xf6, 0x06, 0x8c, 0x6d, 0x10,
	0x37, 0x4c, 0xeb, 0x62, 0x28, 0x3e, 0x66, 0xa8, 0xb9, 0xa6, 0x60, 0x32, 0xc2, 0xab, 0xb9, 0x1c,
	0x0b, 0x91, 0xef, 0x20, 0x38, 0xfe, 0x92, 0x65, 0xdd, 0xad, 0x56, 0xc2, 0xdb, 0xcd, 0xc2, 0xb0,
	0xee, 0xe8, 0x7a, 0xae, 0x60, 0x98, 0x79, 0xc3, 0x64, 0x21, 0x3c, 0xb8, 0xf9, 0x58, 0x76, 0xc8,
	0x7b, 0xba, 0xce, 0x1e, 0xe2, 0xe7, 0x61, 0xca, 0x71, 0x35, 0xfd, 0x6e, 0xde, 0x36, 0x76, 0x89,
	0x9d, 0x33, 0x2d, 0xd7, 0x28, 0x18, 0x3a, 0xcd, 0x3a, 0x39, 0x23, 0xcf, 0x42, 0x60, 0xf3, 0xb1,
	0xec, 0xa4, 0xb0, 0xe8, 0x65, 0x61, 0xcd, 0x8d, 0xfc, 0xca, 0x31, 0x18, 0xd6, 0x4a, 0x2e, 0xb1,
	0x4d, 0xef, 0x06, 0x60, 0xe4, 0x95, 0x0f, 0x10, 0x1c, 0x67, 0xd7, 0x8d, 0x30, 0x9c, 0xc0, 0xcf,
	0x50, 0x37, 0x7e, 0x76, 0xb0, 0x6b, 0xc6, 0x67, 0x08, 0xc6, 0x19, 0xdb, 0x4d, 0xf7, 0x8b, 0x47,
	0xdb, 0x4d, 0x3d, 0x59, 0xef, 0x32, 0x9b, 0x7b, 0xd3, 0x32, 0x49, 0xa2, 0x8f, 0xbe, 0x1d, 0xf0,
	0x1e, 0xdc, 0xb6, 0x4c, 0xa2, 0xbc, 0x83, 0x60, 0xa2, 0x49, 0x2d, 0xee, 0xc6, 0x2a, 0x0c, 0xd6,
	0x6f, 0xd9, 0xdc, 0x91, 0x63, 0x5d, 0x09, 0x02, 0xa9, 0xd8, 0xce, 0xfc, 0xa3, 0x5e, 0x98, 0xb8,
	0xee, 0xe8, 0x5a, 0xe9, 0x91, 0xbc, 0x63, 0xe2, 0x9b, 0x30, 0xe2, 0x54, 0xef, 0x38, 0xba, 0x6d,
	0x54, 0x58, 0x1d, 0xee, 0xa5, 0xd6, 0x38, 0x23, 0x73, 0x40, 0x61, 0x7d, 0x36, 0x2c, 0x5d, 0xcf,
	0xf8, 0x47, 0x3a, 0xc8, 0xf8, 0x1b, 0xd0, 0x67, 0x5b, 0x25, 0xe2, 0x24, 0xfa, 0xa8, 0xd0, 0x85,
	0x38, 0x44, 0x58, 0x25, 0xa2, 0x3a, 0x9e, 0xf3, 0x97, 0xbd, 0x5f, 0x4c, 0xde, 0x63, 0x55, 0xb3,
	0x5d, 0xa3, 0xa0, 0xe9, 0xae, 0x93, 0xe8, 0x6f, 0xcb, 0xaa, 0xca, 0xd7, 0x66, 0x03, 0x29, 0xe5,
	0x7e, 0x0f, 0x24, 0x9a, 0xd9, 0xe2, 0x5e, 0x73, 0xd0, 0x7b, 0x64, 0xb3, 0xb1, 0x7b, 0x0e, 0xc5,
	0xd8, 0xbd, 0x1d, 0x18, 0xfb, 0xaa, 0x6f, 0xec, 0x23, 0x6d, 0x8f, 0x16, 0x8d, 0x1d, 0x69, 0xe2,
	0xbe, 0xae, 0x4c, 0xfc, 0x71, 0xfd, 0x73, 0xb3, 0xfe, 0xf6, 0x30, 0xee, 0x2e, 0x6b, 0x30, 0xe0,
	0x9f, 0xc1, 0x43, 0x20, 0x0e, 0x30, 0x1e, 0x4b, 0xbe, 0xa4, 0xf2, 0x1e, 0x82, 0x13, 0xf4, 0xc2,
	0xea, 0xc3, 0x7d, 0xe8, 0xf7, 0xaa, 0xb7, 0x11, 0x9c, 0x6c, 0x40, 0x14, 0x24, 0xb1, 0x80, 0x0b,
	0xd4, 0x0d, 0x17, 0xb1, 0x93, 0x58, 0xf0, 0x99, 0xdc, 0xc8, 0x99, 0x68, 0x76, 0xd4, 0xad, 0xd9,
	0x0f, 0x56, 0xbf, 0x6e, 0xc1, 0x49, 0x76, 0x9d, 0x6e, 0xc4, 0x16, 0xff, 0xeb, 0xb8, 0x2e, 0xc9,
	0x6e, 0x0d, 0x7f, 0xed, 0xf5, 0x4a, 0x87, 0x99, 0xdf, 0xda, 0x31, 0x0a, 0xee, 0xa6, 0x66, 0xe6,
	0xad, 0x42, 0xe1, 0x81, 0x94, 0xc4, 0x59, 0x00, 0x9b, 0xe8, 0x46, 0xc5, 0xa0, 0x85, 0xc8, 0xcb,
	0x06, 0x83, 0xfc, 0xc3, 0x2e, 0x78, 0x8c, 0x8f, 0x43, 0x8f, 0xae, 0xd3, 0x20, 0xa7, 0x2f, 0x51,
	0xb6, 0x47, 0xd7, 0xf1, 0x29, 0x38, 0xea, 0x54, 0xef, 0x78, 0x9b, 0xb1, 0xb2, 0xc8, 0xc4, 0xfc,
	0x67, 0x78, 0x1e, 0xb0, 0x69, 0xb9, 0xc4, 0xc9, 0xe9, 0x96, 0xe9, 0x12, 0xd3, 0xcd, 0xb9, 0xfb,
	0x15, 0xbf, 0x44, 0x8e, 0xd1, 0x37, 0xab, 0xec, 0xc5, 0xf6, 0x7e, 0x85, 0xe0, 0xb3, 0x30, 0x12,
	0x5a, 0x9d, 0xe8, 0xf7, 0xb7, 0x44, 0xd9, 0x61, 0x71, 0x35, 0x7e, 0x5d, 0x2c, 0x9c, 0x47, 0xa9,
	0xcf, 0x2d, 0x4b, 0x3f, 0xed, 0x23, 0x8d, 0x18, 0x2a, 0x65, 0x48, 0xac, 0xaa, 0x33, 0x30, 0x5c,
	0xb1, 0xc9, 0xae, 0x41, 0xf6, 0x72, 0x96, 0x59, 0xda, 0x4f, 0x0c, 0x4c, 0xa3, 0xb3, 0x03, 0xd9,
	0x21, 0xfe, 0xec, 0x15, 0xb3, 0xb4, 0x9f, 0x7c, 0x1e, 0x06, 0x7c, 0x71, 0x7c, 0x31, 0xc4, 0xf0,
	0x74, 0xcc, 0xa6, 0xcf, 0x6b, 0x90, 0x68, 0x06, 0xc6, 0x83, 0x6a, 0x06, 0x86, 0x43, 0x26, 0xa3,
	0x3b, 0x67, 0x87, 0x74, 0xc1, 0x5a, 0x09, 0x38, 0xea, 0xdb, 0x89, 0x05, 0x8b, 0xff, 0x53, 0xb9,
	0x87, 0x60, 0x92, 0x7f, 0x93, 0x88, 0x69, 0xfb, 0x30, 0x52, 0xc8, 0x2d, 0x18, 0x16, 0x93, 0x3f,
	0x0f, 0x91, 0xb8, 0x95, 0x83, 0x79, 0x47, 0x68, 0x07, 0x0a, 0x96, 0xdf, 0x45, 0x23, 0xc0, 0x36,
	0x9e, 0x87, 0x0e, 0x7a, 0xde, 0xc1, 0x62, 0xfc, 0x43, 0x04, 0x09, 0x2f, 0x0b, 0x8a, 0x87, 0x3c,
	0xfc, 0xdc, 0xfc, 0x01, 0x82, 0xc9, 0x08, 0x54, 0xdc, 0x95, 0x9a, 0xaa, 0x3d, 0x3a, 0x50, 0xb5,
	0x8f, 0x9b, 0xab, 0xbf, 0x0c, 0x93, 0x2c, 0x1d, 0x46, 0xfb, 0xa0, 0x18, 0x30, 0x67, 0xa8, 0xa1,
	0x66, 0xe0, 0x74, 0xd4, 0x67, 0x94, 0x28, 0xcd, 0xe2, 0xe6, 0x33, 0x04, 0xb3, 0x0d, 0x8d, 0xe2,
	0xf0, 0x3d, 0xec, 0x30, 0xf8, 0xa8, 0x40, 0xc2, 0x4f, 0x07, 0x39, 0xef, 0xce, 0x91, 0xd3, 0xea,
	0xfb, 0x73, 0x9f, 0xe9, 0xfc, 0x82, 0xc8, 0xdc, 0x71, 0xdc, 0x88, 0x7c, 0xa9, 0xbc, 0x0e, 0xb3,
	0xcc, 0x60, 0x72, 0xad, 0xba, 0xee, 0x31, 0x7f, 0x0f, 0x81, 0xe2, 0x79, 0x49, 0xf4, 0xf6, 0x0f,
	0xdf, 0x8b, 0x7f, 0x89, 0x60, 0x56, 0x8a, 0x8f, 0xfb, 0x73, 0x19, 0x26, 0x5b, 0x31, 0xe3, 0xfb,
	0x76, 0x17, 0x77, 0xf7, 0x89, 0x68, 0x56, 0x3a, 0x6a, 0xeb, 0x29, 0xdc, 0x86, 0xe2, 0x11, 0x34,
	0xb1, 0xef, 0x12, 0xdb, 0x37, 0xef, 0x44, 0x88, 0x3e, 0xea, 0x10, 0xac, 0x15, 0xbe, 0x01, 0xc3,
	0x26, 0xd9, 0xe3, 0xca, 0x10, 0xc2, 0x9d, 0xec, 0xb4, 0x44, 0x93, 0x57, 0x1d, 0x62, 0xb3, 0x1d,
	0x86, 0x4c, 0xb2, 0xa7, 0x72, 0x41, 0xe5, 0x53, 0x04, 0xca, 0xaa, 0x65, 0x16, 0x0c, 0xbb, 0x2c,
	0x03, 0x72, 0x3d, 0x04, 0xe4, 0x02, 0x65, 0xf9, 0x1c, 0x3c, 0x2d, 0x63, 0x39, 0x6c, 0xb1, 0x43,
	0x86, 0xfd, 0x63, 0x04, 0xd3, 0xeb, 0x96, 0xad, 0x93, 0xcf, 0x13, 0xe8, 0x9f, 0x20, 0x98, 0x59,
	0xd5, 0x4c, 0x9d, 0x94, 0x3e, 0x47, 0xa8, 0x33, 0xbf, 0xc8, 0xc0, 0xa8, 0x7f, 0xd2, 0x16, 0x1b,
	0x4e, 0xe2, 0x4f, 0x11, 0x1c, 0x0b, 0x27, 0x55, 0x7c, 0x5e, 0xb2, 0x73, 0xe4, 0xa0, 0x2e, 0x19,
	0xe7, 0x3b, 0x54, 0x79, 0xb1, 0xa6, 0x8e, 0xfa, 0xc1, 0x36, 0xcf, 0xf2, 0xc6, 0xdb, 0x7f, 0xfe,
	0xdb, 0x87, 0x3d, 0x0b, 0xca, 0x99, 0x60, 0xf8, 0xf8, 0x0d, 0xf6, 0xe2, 0x6a, 0x85, 0xdd, 0x54,
	0x9d, 0xf4, 0xdc, 0x5b, 0xc1, 0x40, 0x72, 0x29, 0xf8, 0x94, 0xfd, 0x2e, 0x82, 0x21, 0x61, 0x10,
	0x87, 0x9f, 0x91, 0x20, 0x68, 0x1e, 0xd8, 0xc5, 0x03, 0xfc, 0x6c, 0x4d, 0xa5, 0x04, 0x50, 0x94,
	0x4f, 0x63, 0x11, 0xa5, 0xf7, 0x58, 0xc0, 0x18, 0x40, 0x4c, 0xcf, 0xbd, 0x85, 0x7f, 0x87, 0x60,
	0xb4, 0xa1, 0xf3, 0x83, 0x2f, 0xb4, 0x1d, 0x40, 0x35, 0x36, 0xbf, 0x92, 0x99, 0x4e, 0x44, 0x58,
	0x8e, 0x54, 0x5e, 0xa9, 0xa9, 0xe3, 0xcc, 0x82, 0xf3, 0xb4, 0xbd, 0x35, 0x5f, 0xef, 0x4f, 0x51,
	0x25, 0xce, 0xe3, 0x54, 0x5c, 0x53, 0x3b, 0xf4, 0x04, 0xfc, 0x1b, 0x04, 0xc7, 0xc2, 0x03, 0x4a,
	0xa9, 0x7b, 0x44, 0xce, 0x32, 0xe3, 0x59, 0xfb, 0x2b, 0x35, 0xf5, 0x44, 0xdd, 0x3d, 0x84, 0x9b,
	0x1a, 0x05, 0x7e, 0x25, 0x73, 0x5e, 0x00, 0xee, 0x2f, 0x4b, 0xc9, 0x68, 0x10, 0x9c, 0xe5, 0xa3,
	0x1e, 0xbf, 0xc3, 0xd8, 0x38, 0xe5, 0xc3, 0x5f, 0xec, 0x62, 0x30, 0xc8, 0x94, 0xba, 0xdc, 0xf5,
	0x48, 0x51, 0x79, 0x07, 0x89, 0x9e, 0xb5, 0x87, 0x17, 0x63, 0x7a, 0x16, 0x27, 0x85, 0xef, 0x7b,
	0xfb, 0x1a, 0xbe, 0x22, 0x11, 0xe4, 0x5d, 0xef, 0x26, 0xb1, 0x40, 0xf7, 0x3f, 0xd4, 0x07, 0x52,
	0xc1, 0x68, 0x0b, 0x67, 0xda, 0x06, 0x7f, 0xd3, 0x0c, 0x32, 0x19, 0x6f, 0x6a, 0xa6, 0x7c, 0xb5,
	0xa6, 0x3e, 0xce, 0x9d, 0x33, 0x98, 0x9f, 0x51, 0x13, 0xac, 0x2a, 0x8b, 0x32, 0xbf, 0x0c, 0x19,
	0x41, 0xfc, 0x1f, 0x12, 0x4b, 0xc2, 0x00, 0x12, 0xff, 0x8a, 0x8f, 0xa3, 0x84, 0x61, 0x9f, 0x34,
	0xec, 0xa2, 0x87, 0x95, 0xd2, 0xb0, 0x6b, 0x31, 0x4b, 0x54, 0xd6, 0x6b, 0x6a, 0xbf, 0x90, 0xd1,
	0x2e, 0xe1, 0xee, 0xd4, 0xc1, 0x9f, 0x20, 0x18, 0xac, 0x8f, 0x08, 0xf1, 0xb9, 0xb6, 0x54, 0x04,
	0x03, 0xbc, 0x64, 0x9b, 0xf6, 0x9b, 0xb2, 0x59, 0x53, 0x81, 0x1b, 0xdf, 0xd5, 0x8a, 0x14, 0xe6,
	0xa2, 0x92, 0x8a, 0x0f, 0xd3, 0xd5, 0x8a, 0xce, 0x52, 0xaf, 0xab, 0x15, 0xf1, 0x7b, 0x08, 0x06,
	0xeb, 0xf3, 0x43, 0x29, 0xc8, 0xc6, 0x29, 0x63, 0x72, 0xbc, 0xe9, 0x73, 0xeb, 0x7a, 0xb9, 0xe2,
	0xee, 0x2b, 0x57, 0xc5, 0x78, 0x38, 0x3f, 0x97, 0x8a, 0x17, 0x0f, 0x14, 0x93, 0x97, 0x70, 0x7f,
	0x80, 0x60, 0xc0, 0x1f, 0xfe, 0xe1, 0xb9, 0x36, 0xfc, 0x09, 0xd3, 0xca, 0xe4, 0xb9, 0x58, 0x6b,
	0x39, 0xc9, 0xcf, 0x85, 0x49, 0x6e, 0x93, 0x4b, 0x9b, 0xad, 0x87, 0x7f, 0x88, 0x60, 0x58, 0x1c,
	0x19, 0xe2, 0x54, 0x5b, 0x82, 0x43, 0x63, 0x9a, 0x64, 0xfb, 0xb1, 0x8c, 0x72, 0xbd, 0xa6, 0x8e,
	0x70, 0x9a, 0x59, 0x02, 0xa0, 0x58, 0xd3, 0xca, 0x53, 0xf2, 0xbc, 0xcf, 0x93, 0xc5, 0x92, 0x3f,
	0xd0, 0xf9, 0x19, 0x82, 0x91, 0xd0, 0x04, 0x0e, 0xa7, 0x63, 0xa4, 0x3b, 0x71, 0xc4, 0x98, 0x3c,
	0x1f, 0x5f, 0x80, 0x1b, 0x78, 0xb5, 0xa6, 0x0e, 0x8b, 0xc5, 0x8b, 0x42, 0x4f, 0xe1, 0xf9, 0x78,
	0xd0, 0x79, 0xc1, 0xfa, 0x16, 0x82, 0x61, 0x71, 0xe2, 0x26, 0x35, 0x72, 0xc4, 0x68, 0x2e, 0x8e,
	0x91, 0xa7, 0x29, 0xb2, 0x24, 0x4e, 0x04, 0xc8, 0x7c, 0x14, 0x25, 0xba, 0x23, 0x7e, 0x1f, 0xc1,
	0x60, 0x7d, 0x86, 0x28, 0x8d, 0x91, 0xc6, 0x49, 0x63, 0x9c, 0xf3, 0x2f, 0x8a, 0xe1, 0x72, 0x06,
	0x3f, 0x15, 0xab, 0x0a, 0x78, 0x37, 0xbd, 0x61, 0x71, 0xf8, 0x27, 0xb5, 0x4c, 0xc4, 0x94, 0x30,
	0x0e, 0xb2, 0x2f, 0xd5, 0x54, 0xcc, 0x8e, 0x6c, 0x2a, 0xe1, 0xcf, 0x66, 0x44, 0x22, 0xd9, 0xa2,
	0x94, 0xa4, 0x68, 0xf9, 0xae, 0xf8, 0x6b, 0x04, 0x63, 0x8d, 0x23, 0x11, 0x69, 0x95, 0x6a, 0x31,
	0xed, 0x4a, 0x2e, 0x74, 0x24, 0xc3, 0x7d, 0x72, 0x8d, 0x62, 0xbf, 0xa6, 0x5c, 0xee, 0xf8, 0xfa,
	0x41, 0xf8, 0x96, 0x4b, 0x68, 0xce, 0x2b, 0x4d, 0xc7, 0xc2, 0x33, 0x87, 0x18, 0x97, 0xec, 0x86,
	0x76, 0x72, 0x32, 0x4e, 0x63, 0x5b, 0x79, 0xad, 0xa6, 0x8e, 0xfa, 0x35, 0x96, 0x3f, 0xa3, 0x1a,
	0x3c, 0xa7, 0x2c, 0x74, 0x50, 0x92, 0xfc, 0x06, 0xfd, 0x52, 0xd0, 0x22, 0xff, 0x39, 0x82, 0x91,
	0xd0, 0x1c, 0x40, 0x9a, 0x11, 0xa2, 0x66, 0x18, 0xd2, 0x8c, 0x10, 0x39, 0x62, 0x50, 0xd6, 0xc2,
	0x29, 0x77, 0x11, 0x77, 0xa3, 0x04, 0xfe, 0x63, 0xfd, 0x0e, 0x1b, 0xcb, 0xfa, 0x91, 0x83, 0x86,
	0x78, 0xd6, 0x27, 0x35, 0xf5, 0x84, 0x7f, 0x6e, 0x53, 0x00, 0x6c, 0x66, 0xc4, 0xeb, 0x9a, 0xbf,
	0x4c, 0xe6, 0x44, 0x81, 0x0e, 0xf4, 0x3e, 0x5b, 0xe7, 0xe2, 0xfb, 0x08, 0x8e, 0x85, 0x47, 0x0e,
	0x52, 0x85, 0x22, 0xa7, 0x13, 0x2d, 0x6b, 0xf1, 0x8a, 0x98, 0x5c, 0x16, 0xe7, 0x16, 0x62, 0xd6,
	0x62, 0x11, 0xaa, 0x57, 0x3e, 0xc6, 0x1a, 0x5b, 0xdc, 0x38, 0xd3, 0x79, 0xa3, 0x5e, 0x1a, 0xb3,
	0xad, 0x7a, 0xe8, 0xca, 0x12, 0x85, 0x7e, 0x51, 0x49, 0xb7, 0x29, 0x1c, 0x82, 0xec, 0x92, 0x43,
	0xcc, 0xbc, 0x17, 0xa9, 0x7f, 0x41, 0x80, 0x9b, 0x5b, 0xe8, 0xf8, 0x62, 0xfb, 0x4a, 0xdd, 0xdc,
	0xed, 0x4c, 0xc6, 0x6d, 0xb5, 0x2a, 0x7a, 0x4d, 0x3d, 0xee, 0x57, 0x6d, 0xe1, 0x39, 0xd5, 0x63,
	0x43, 0xb9, 0x14, 0xdf, 0xe9, 0x43, 0x2d, 0xdb, 0xa5, 0x70, 0x03, 0xfc, 0x1f, 0x08, 0x70, 0x73,
	0xc3, 0x5d, 0xaa, 0x5a, 0xcb, 0xfe, 0x7c, 0x7c, 0xd5, 0xaa, 0x35, 0x35, 0x21, 0xc2, 0x68, 0x0a,
	0x8b, 0xed, 0xcc, 0x9a, 0x58, 0x17, 0x84, 0xa5, 0xd2, 0xd0, 0x08, 0x69, 0xea, 0x85, 0x47, 0x58,
	0xd9, 0xdf, 0x22, 0x78, 0xbc, 0xa9, 0x35, 0x8e, 0x17, 0xda, 0x64, 0xa0, 0xa8, 0xf6, 0x7e, 0xf2,
	0x62, 0x67, 0x42, 0xdc, 0x09, 0x37, 0xc3, 0xa9, 0xeb, 0x32, 0xee, 0x96, 0x45, 0x7c, 0x0f, 0x01,
	0x6e, 0xee, 0xa8, 0x4b, 0x79, 0x6b, 0xd9, 0x80, 0x6f, 0x19, 0xf5, 0xeb, 0x62, 0xd4, 0x5f, 0x9e,
	0xbb, 0x14, 0x33, 0xea, 0x1b, 0x59, 0xc0, 0xff, 0x45, 0xf0, 0x84, 0xac, 0x47, 0x8f, 0xaf, 0xc5,
	0x6f, 0x2e, 0x45, 0xb5, 0xc1, 0x93, 0x9d, 0xb7, 0x78, 0x95, 0x42, 0x4d, 0x3d, 0xcd, 0xa3, 0xab,
	0x55, 0x03, 0x39, 0xa2, 0xca, 0xb7, 0xe1, 0xc8, 0x0e, 0xb7, 0x8b, 0x79, 0x95, 0x7f, 0x42, 0xd6,
	0xc9, 0x97, 0xea, 0x1e, 0x63, 0x04, 0xd0, 0x92, 0xbc, 0x4d, 0x91, 0xbc, 0xe5, 0xb9, 0xcb, 0x31,
	0xc9, 0x6b, 0x50, 0xc1, 0xa3, 0xef, 0xef, 0x08, 0xa6, 0x24, 0xbd, 0x78, 0x7c, 0xb5, 0x4d, 0x2c,
	0xc8, 0x67, 0x0c, 0xc9, 0x6b, 0xdd, 0x8a, 0xf3, 0xa0, 0x7a, 0x21, 0x1c, 0x54, 0xcb, 0xb8, 0x7b,
	0xc2, 0x3c, 0x4f, 0x9d, 0x92, 0xf4, 0xed, 0xa5, 0xaa, 0xb6, 0xef, 0xf7, 0x77, 0xe3, 0xa7, 0x3b,
	0x35, 0xf5, 0x71, 0x8f, 0xaf, 0x79, 0xb1, 0xdb, 0x4b, 0x15, 0x7d, 0x59, 0xb9, 0xd1, 0x35, 0xa7,
	0x4b, 0x36, 0x43, 0xe4, 0x03, 0xf4, 0x3c, 0xd5, 0xd3, 0x5d, 0x32, 0x2a, 0x90, 0xea, 0xde, 0x7e,
	0xc4, 0xf0, 0x08, 0xe9, 0xae, 0x33, 0xb0, 0xa2, 0xee, 0xff, 0x42, 0x30, 0xd9, 0x72, 0xde, 0x80,
	0x65, 0xff, 0x9b, 0xa0, 0xdd, 0x94, 0xa2, 0xcb, 0xdc, 0xd4, 0x42, 0xef, 0x97, 0x94, 0x8d, 0xee,
	0xf5, 0x2e, 0x78, 0x50, 0x45, 0xad, 0xff, 0x8d, 0x20, 0xd9, 0x7a, 0x60, 0x81, 0xaf, 0xc8, 0x08,
	0x6f, 0x37, 0xe7, 0xe8, 0x46, 0xef, 0x62, 0x4b, 0xbd, 0x6f, 0x2a, 0x9b, 0x07, 0xe0, 0x9b, 0x62,
	0x15, 0x14, 0x4f, 0xae, 0xff, 0x5e, 0xc5, 0xcd, 0x03, 0x97, 0x3f, 0xa9, 0xa9, 0x1d, 0xd7, 0xad,
	0x38, 0x4b, 0xe9, 0xf4, 0xde, 0xde, 0x5e, 0xe3, 0x34, 0x46, 0xab, 0xba, 0x3b, 0xec, 0x2f, 0xa3,
	0x9e, 0xa9, 0x94, 0x34, 0xb7, 0x60, 0xd9, 0xe5, 0x95, 0x1d, 0x98, 0xd5, 0x2d, 0x7f, 0x1b, 0xaa,
	0xa2, 0xff, 0xe7, 0x5d, 0x75, 0x55, 0xb5, 0x8a, 0x71, 0x0b, 0xdd, 0xbe, 0xc2, 0x97, 0x14, 0xad,
	0x92, 0x66, 0x16, 0x53, 0x96, 0x5d, 0x4c, 0x17, 0x89, 0x49, 0x33, 0x76, 0x3a, 0x38, 0x27, 0xe2,
	0x0f, 0xaf, 0x96, 0x0d, 0xbb, 0xfc, 0x1f, 0x84, 0xee, 0xf4, 0xd3, 0xb5, 0x0b, 0xff, 0x0f, 0x00,
	0x00, 0xff, 0xff, 0xed, 0x2d, 0xc3, 0xe8, 0x64, 0x36, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IncidentServiceClient is the client API for IncidentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IncidentServiceClient interface {
	// Creates a new incident.
	CreateIncident(ctx context.Context, in *CreateIncidentRequest, opts ...grpc.CallOption) (*Incident, error)
	// Returns an incident by name.
	GetIncident(ctx context.Context, in *GetIncidentRequest, opts ...grpc.CallOption) (*Incident, error)
	// Returns a list of incidents.
	// Incidents are ordered by start time, with the most recent incidents first.
	SearchIncidents(ctx context.Context, in *SearchIncidentsRequest, opts ...grpc.CallOption) (*SearchIncidentsResponse, error)
	// Updates an existing incident.
	UpdateIncident(ctx context.Context, in *UpdateIncidentRequest, opts ...grpc.CallOption) (*Incident, error)
	// Returns a list of incidents that are "similar" to the specified incident
	// or signal. This functionality is provided on a best-effort basis and the
	// definition of "similar" is subject to change.
	SearchSimilarIncidents(ctx context.Context, in *SearchSimilarIncidentsRequest, opts ...grpc.CallOption) (*SearchSimilarIncidentsResponse, error)
	// Creates an annotation on an existing incident. Only 'text/plain' and
	// 'text/markdown' annotations can be created via this method.
	CreateAnnotation(ctx context.Context, in *CreateAnnotationRequest, opts ...grpc.CallOption) (*Annotation, error)
	// Lists annotations that are part of an incident. No assumptions should be
	// made on the content-type of the annotation returned.
	ListAnnotations(ctx context.Context, in *ListAnnotationsRequest, opts ...grpc.CallOption) (*ListAnnotationsResponse, error)
	// Creates a tag on an existing incident.
	CreateTag(ctx context.Context, in *CreateTagRequest, opts ...grpc.CallOption) (*Tag, error)
	// Deletes an existing tag.
	DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Lists tags that are part of an incident.
	ListTags(ctx context.Context, in *ListTagsRequest, opts ...grpc.CallOption) (*ListTagsResponse, error)
	// Creates a new signal.
	CreateSignal(ctx context.Context, in *CreateSignalRequest, opts ...grpc.CallOption) (*Signal, error)
	// Lists signals that are part of an incident.
	// Signals are returned in reverse chronological order.
	// Note that search should not be relied on for critical functionality.  It
	// has lower availability guarantees and might fail to return valid results.
	// Returned results might include stale or extraneous entries.
	SearchSignals(ctx context.Context, in *SearchSignalsRequest, opts ...grpc.CallOption) (*SearchSignalsResponse, error)
	// Finds a signal by other unique IDs.
	LookupSignal(ctx context.Context, in *LookupSignalRequest, opts ...grpc.CallOption) (*Signal, error)
	// Returns a signal by name.
	GetSignal(ctx context.Context, in *GetSignalRequest, opts ...grpc.CallOption) (*Signal, error)
	// Updates an existing signal (for example, to assign/unassign it to an
	// incident).
	UpdateSignal(ctx context.Context, in *UpdateSignalRequest, opts ...grpc.CallOption) (*Signal, error)
	// Escalates an incident.
	EscalateIncident(ctx context.Context, in *EscalateIncidentRequest, opts ...grpc.CallOption) (*EscalateIncidentResponse, error)
	// Creates a new artifact.
	CreateArtifact(ctx context.Context, in *CreateArtifactRequest, opts ...grpc.CallOption) (*Artifact, error)
	// Returns a list of artifacts for an incident.
	ListArtifacts(ctx context.Context, in *ListArtifactsRequest, opts ...grpc.CallOption) (*ListArtifactsResponse, error)
	// Updates an existing artifact.
	UpdateArtifact(ctx context.Context, in *UpdateArtifactRequest, opts ...grpc.CallOption) (*Artifact, error)
	// Deletes an existing artifact.
	DeleteArtifact(ctx context.Context, in *DeleteArtifactRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Sends a summary of the shift for oncall handoff.
	SendShiftHandoff(ctx context.Context, in *SendShiftHandoffRequest, opts ...grpc.CallOption) (*SendShiftHandoffResponse, error)
	// Creates a new subscription.
	// This will fail if:
	//    a. there are too many (50) subscriptions in the incident already
	//    b. a subscription using the given channel already exists
	CreateSubscription(ctx context.Context, in *CreateSubscriptionRequest, opts ...grpc.CallOption) (*Subscription, error)
	// Updates a subscription.
	UpdateSubscription(ctx context.Context, in *UpdateSubscriptionRequest, opts ...grpc.CallOption) (*Subscription, error)
	// Returns a list of subscriptions for an incident.
	ListSubscriptions(ctx context.Context, in *ListSubscriptionsRequest, opts ...grpc.CallOption) (*ListSubscriptionsResponse, error)
	// Deletes an existing subscription.
	DeleteSubscription(ctx context.Context, in *DeleteSubscriptionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Creates a role assignment on an existing incident. Normally, the user field
	// will be set when assigning a role to oneself, and the next field will be
	// set when proposing another user as the assignee. Setting the next field
	// directly to a user other than oneself is equivalent to proposing and
	// force-assigning the role to the user.
	CreateIncidentRoleAssignment(ctx context.Context, in *CreateIncidentRoleAssignmentRequest, opts ...grpc.CallOption) (*IncidentRoleAssignment, error)
	// Deletes an existing role assignment.
	DeleteIncidentRoleAssignment(ctx context.Context, in *DeleteIncidentRoleAssignmentRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Lists role assignments that are part of an incident.
	ListIncidentRoleAssignments(ctx context.Context, in *ListIncidentRoleAssignmentsRequest, opts ...grpc.CallOption) (*ListIncidentRoleAssignmentsResponse, error)
	// Starts a role handover. The proposed assignee will receive an email
	// notifying them of the assignment. This will fail if a role handover is
	// already pending.
	// Handover to an oncall ladder is not permitted. Use
	// CreateIncidentRoleAssignment instead.
	RequestIncidentRoleHandover(ctx context.Context, in *RequestIncidentRoleHandoverRequest, opts ...grpc.CallOption) (*IncidentRoleAssignment, error)
	// Confirms a role handover. This will fail if the 'proposed_assignee' field
	// of the IncidentRoleAssignment is not equal to the 'new_assignee' field of
	// the request. If the caller is not the new_assignee,
	// ForceIncidentRoleHandover should be used instead.
	ConfirmIncidentRoleHandover(ctx context.Context, in *ConfirmIncidentRoleHandoverRequest, opts ...grpc.CallOption) (*IncidentRoleAssignment, error)
	// Forces a role handover. This will fail if the 'proposed_assignee' field of
	// the IncidentRoleAssignment is not equal to the 'new_assignee' field of the
	// request. If the caller is the new_assignee, ConfirmIncidentRoleHandover
	// should be used instead.
	ForceIncidentRoleHandover(ctx context.Context, in *ForceIncidentRoleHandoverRequest, opts ...grpc.CallOption) (*IncidentRoleAssignment, error)
	// Cancels a role handover. This will fail if the 'proposed_assignee' field of
	// the IncidentRoleAssignment is not equal to the 'new_assignee' field of the
	// request.
	CancelIncidentRoleHandover(ctx context.Context, in *CancelIncidentRoleHandoverRequest, opts ...grpc.CallOption) (*IncidentRoleAssignment, error)
}

type incidentServiceClient struct {
	cc *grpc.ClientConn
}

func NewIncidentServiceClient(cc *grpc.ClientConn) IncidentServiceClient {
	return &incidentServiceClient{cc}
}

func (c *incidentServiceClient) CreateIncident(ctx context.Context, in *CreateIncidentRequest, opts ...grpc.CallOption) (*Incident, error) {
	out := new(Incident)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/CreateIncident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) GetIncident(ctx context.Context, in *GetIncidentRequest, opts ...grpc.CallOption) (*Incident, error) {
	out := new(Incident)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/GetIncident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) SearchIncidents(ctx context.Context, in *SearchIncidentsRequest, opts ...grpc.CallOption) (*SearchIncidentsResponse, error) {
	out := new(SearchIncidentsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/SearchIncidents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) UpdateIncident(ctx context.Context, in *UpdateIncidentRequest, opts ...grpc.CallOption) (*Incident, error) {
	out := new(Incident)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/UpdateIncident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) SearchSimilarIncidents(ctx context.Context, in *SearchSimilarIncidentsRequest, opts ...grpc.CallOption) (*SearchSimilarIncidentsResponse, error) {
	out := new(SearchSimilarIncidentsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/SearchSimilarIncidents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) CreateAnnotation(ctx context.Context, in *CreateAnnotationRequest, opts ...grpc.CallOption) (*Annotation, error) {
	out := new(Annotation)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/CreateAnnotation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ListAnnotations(ctx context.Context, in *ListAnnotationsRequest, opts ...grpc.CallOption) (*ListAnnotationsResponse, error) {
	out := new(ListAnnotationsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/ListAnnotations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) CreateTag(ctx context.Context, in *CreateTagRequest, opts ...grpc.CallOption) (*Tag, error) {
	out := new(Tag)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/CreateTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) DeleteTag(ctx context.Context, in *DeleteTagRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/DeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ListTags(ctx context.Context, in *ListTagsRequest, opts ...grpc.CallOption) (*ListTagsResponse, error) {
	out := new(ListTagsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/ListTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) CreateSignal(ctx context.Context, in *CreateSignalRequest, opts ...grpc.CallOption) (*Signal, error) {
	out := new(Signal)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/CreateSignal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) SearchSignals(ctx context.Context, in *SearchSignalsRequest, opts ...grpc.CallOption) (*SearchSignalsResponse, error) {
	out := new(SearchSignalsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/SearchSignals", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) LookupSignal(ctx context.Context, in *LookupSignalRequest, opts ...grpc.CallOption) (*Signal, error) {
	out := new(Signal)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/LookupSignal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) GetSignal(ctx context.Context, in *GetSignalRequest, opts ...grpc.CallOption) (*Signal, error) {
	out := new(Signal)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/GetSignal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) UpdateSignal(ctx context.Context, in *UpdateSignalRequest, opts ...grpc.CallOption) (*Signal, error) {
	out := new(Signal)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/UpdateSignal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) EscalateIncident(ctx context.Context, in *EscalateIncidentRequest, opts ...grpc.CallOption) (*EscalateIncidentResponse, error) {
	out := new(EscalateIncidentResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/EscalateIncident", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) CreateArtifact(ctx context.Context, in *CreateArtifactRequest, opts ...grpc.CallOption) (*Artifact, error) {
	out := new(Artifact)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/CreateArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ListArtifacts(ctx context.Context, in *ListArtifactsRequest, opts ...grpc.CallOption) (*ListArtifactsResponse, error) {
	out := new(ListArtifactsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/ListArtifacts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) UpdateArtifact(ctx context.Context, in *UpdateArtifactRequest, opts ...grpc.CallOption) (*Artifact, error) {
	out := new(Artifact)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/UpdateArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) DeleteArtifact(ctx context.Context, in *DeleteArtifactRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/DeleteArtifact", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) SendShiftHandoff(ctx context.Context, in *SendShiftHandoffRequest, opts ...grpc.CallOption) (*SendShiftHandoffResponse, error) {
	out := new(SendShiftHandoffResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/SendShiftHandoff", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) CreateSubscription(ctx context.Context, in *CreateSubscriptionRequest, opts ...grpc.CallOption) (*Subscription, error) {
	out := new(Subscription)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/CreateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) UpdateSubscription(ctx context.Context, in *UpdateSubscriptionRequest, opts ...grpc.CallOption) (*Subscription, error) {
	out := new(Subscription)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/UpdateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ListSubscriptions(ctx context.Context, in *ListSubscriptionsRequest, opts ...grpc.CallOption) (*ListSubscriptionsResponse, error) {
	out := new(ListSubscriptionsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/ListSubscriptions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) DeleteSubscription(ctx context.Context, in *DeleteSubscriptionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/DeleteSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) CreateIncidentRoleAssignment(ctx context.Context, in *CreateIncidentRoleAssignmentRequest, opts ...grpc.CallOption) (*IncidentRoleAssignment, error) {
	out := new(IncidentRoleAssignment)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/CreateIncidentRoleAssignment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) DeleteIncidentRoleAssignment(ctx context.Context, in *DeleteIncidentRoleAssignmentRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/DeleteIncidentRoleAssignment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ListIncidentRoleAssignments(ctx context.Context, in *ListIncidentRoleAssignmentsRequest, opts ...grpc.CallOption) (*ListIncidentRoleAssignmentsResponse, error) {
	out := new(ListIncidentRoleAssignmentsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/ListIncidentRoleAssignments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) RequestIncidentRoleHandover(ctx context.Context, in *RequestIncidentRoleHandoverRequest, opts ...grpc.CallOption) (*IncidentRoleAssignment, error) {
	out := new(IncidentRoleAssignment)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/RequestIncidentRoleHandover", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ConfirmIncidentRoleHandover(ctx context.Context, in *ConfirmIncidentRoleHandoverRequest, opts ...grpc.CallOption) (*IncidentRoleAssignment, error) {
	out := new(IncidentRoleAssignment)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/ConfirmIncidentRoleHandover", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) ForceIncidentRoleHandover(ctx context.Context, in *ForceIncidentRoleHandoverRequest, opts ...grpc.CallOption) (*IncidentRoleAssignment, error) {
	out := new(IncidentRoleAssignment)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/ForceIncidentRoleHandover", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *incidentServiceClient) CancelIncidentRoleHandover(ctx context.Context, in *CancelIncidentRoleHandoverRequest, opts ...grpc.CallOption) (*IncidentRoleAssignment, error) {
	out := new(IncidentRoleAssignment)
	err := c.cc.Invoke(ctx, "/google.cloud.irm.v1alpha2.IncidentService/CancelIncidentRoleHandover", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IncidentServiceServer is the server API for IncidentService service.
type IncidentServiceServer interface {
	// Creates a new incident.
	CreateIncident(context.Context, *CreateIncidentRequest) (*Incident, error)
	// Returns an incident by name.
	GetIncident(context.Context, *GetIncidentRequest) (*Incident, error)
	// Returns a list of incidents.
	// Incidents are ordered by start time, with the most recent incidents first.
	SearchIncidents(context.Context, *SearchIncidentsRequest) (*SearchIncidentsResponse, error)
	// Updates an existing incident.
	UpdateIncident(context.Context, *UpdateIncidentRequest) (*Incident, error)
	// Returns a list of incidents that are "similar" to the specified incident
	// or signal. This functionality is provided on a best-effort basis and the
	// definition of "similar" is subject to change.
	SearchSimilarIncidents(context.Context, *SearchSimilarIncidentsRequest) (*SearchSimilarIncidentsResponse, error)
	// Creates an annotation on an existing incident. Only 'text/plain' and
	// 'text/markdown' annotations can be created via this method.
	CreateAnnotation(context.Context, *CreateAnnotationRequest) (*Annotation, error)
	// Lists annotations that are part of an incident. No assumptions should be
	// made on the content-type of the annotation returned.
	ListAnnotations(context.Context, *ListAnnotationsRequest) (*ListAnnotationsResponse, error)
	// Creates a tag on an existing incident.
	CreateTag(context.Context, *CreateTagRequest) (*Tag, error)
	// Deletes an existing tag.
	DeleteTag(context.Context, *DeleteTagRequest) (*empty.Empty, error)
	// Lists tags that are part of an incident.
	ListTags(context.Context, *ListTagsRequest) (*ListTagsResponse, error)
	// Creates a new signal.
	CreateSignal(context.Context, *CreateSignalRequest) (*Signal, error)
	// Lists signals that are part of an incident.
	// Signals are returned in reverse chronological order.
	// Note that search should not be relied on for critical functionality.  It
	// has lower availability guarantees and might fail to return valid results.
	// Returned results might include stale or extraneous entries.
	SearchSignals(context.Context, *SearchSignalsRequest) (*SearchSignalsResponse, error)
	// Finds a signal by other unique IDs.
	LookupSignal(context.Context, *LookupSignalRequest) (*Signal, error)
	// Returns a signal by name.
	GetSignal(context.Context, *GetSignalRequest) (*Signal, error)
	// Updates an existing signal (for example, to assign/unassign it to an
	// incident).
	UpdateSignal(context.Context, *UpdateSignalRequest) (*Signal, error)
	// Escalates an incident.
	EscalateIncident(context.Context, *EscalateIncidentRequest) (*EscalateIncidentResponse, error)
	// Creates a new artifact.
	CreateArtifact(context.Context, *CreateArtifactRequest) (*Artifact, error)
	// Returns a list of artifacts for an incident.
	ListArtifacts(context.Context, *ListArtifactsRequest) (*ListArtifactsResponse, error)
	// Updates an existing artifact.
	UpdateArtifact(context.Context, *UpdateArtifactRequest) (*Artifact, error)
	// Deletes an existing artifact.
	DeleteArtifact(context.Context, *DeleteArtifactRequest) (*empty.Empty, error)
	// Sends a summary of the shift for oncall handoff.
	SendShiftHandoff(context.Context, *SendShiftHandoffRequest) (*SendShiftHandoffResponse, error)
	// Creates a new subscription.
	// This will fail if:
	//    a. there are too many (50) subscriptions in the incident already
	//    b. a subscription using the given channel already exists
	CreateSubscription(context.Context, *CreateSubscriptionRequest) (*Subscription, error)
	// Updates a subscription.
	UpdateSubscription(context.Context, *UpdateSubscriptionRequest) (*Subscription, error)
	// Returns a list of subscriptions for an incident.
	ListSubscriptions(context.Context, *ListSubscriptionsRequest) (*ListSubscriptionsResponse, error)
	// Deletes an existing subscription.
	DeleteSubscription(context.Context, *DeleteSubscriptionRequest) (*empty.Empty, error)
	// Creates a role assignment on an existing incident. Normally, the user field
	// will be set when assigning a role to oneself, and the next field will be
	// set when proposing another user as the assignee. Setting the next field
	// directly to a user other than oneself is equivalent to proposing and
	// force-assigning the role to the user.
	CreateIncidentRoleAssignment(context.Context, *CreateIncidentRoleAssignmentRequest) (*IncidentRoleAssignment, error)
	// Deletes an existing role assignment.
	DeleteIncidentRoleAssignment(context.Context, *DeleteIncidentRoleAssignmentRequest) (*empty.Empty, error)
	// Lists role assignments that are part of an incident.
	ListIncidentRoleAssignments(context.Context, *ListIncidentRoleAssignmentsRequest) (*ListIncidentRoleAssignmentsResponse, error)
	// Starts a role handover. The proposed assignee will receive an email
	// notifying them of the assignment. This will fail if a role handover is
	// already pending.
	// Handover to an oncall ladder is not permitted. Use
	// CreateIncidentRoleAssignment instead.
	RequestIncidentRoleHandover(context.Context, *RequestIncidentRoleHandoverRequest) (*IncidentRoleAssignment, error)
	// Confirms a role handover. This will fail if the 'proposed_assignee' field
	// of the IncidentRoleAssignment is not equal to the 'new_assignee' field of
	// the request. If the caller is not the new_assignee,
	// ForceIncidentRoleHandover should be used instead.
	ConfirmIncidentRoleHandover(context.Context, *ConfirmIncidentRoleHandoverRequest) (*IncidentRoleAssignment, error)
	// Forces a role handover. This will fail if the 'proposed_assignee' field of
	// the IncidentRoleAssignment is not equal to the 'new_assignee' field of the
	// request. If the caller is the new_assignee, ConfirmIncidentRoleHandover
	// should be used instead.
	ForceIncidentRoleHandover(context.Context, *ForceIncidentRoleHandoverRequest) (*IncidentRoleAssignment, error)
	// Cancels a role handover. This will fail if the 'proposed_assignee' field of
	// the IncidentRoleAssignment is not equal to the 'new_assignee' field of the
	// request.
	CancelIncidentRoleHandover(context.Context, *CancelIncidentRoleHandoverRequest) (*IncidentRoleAssignment, error)
}

// UnimplementedIncidentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedIncidentServiceServer struct {
}

func (*UnimplementedIncidentServiceServer) CreateIncident(ctx context.Context, req *CreateIncidentRequest) (*Incident, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIncident not implemented")
}
func (*UnimplementedIncidentServiceServer) GetIncident(ctx context.Context, req *GetIncidentRequest) (*Incident, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIncident not implemented")
}
func (*UnimplementedIncidentServiceServer) SearchIncidents(ctx context.Context, req *SearchIncidentsRequest) (*SearchIncidentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchIncidents not implemented")
}
func (*UnimplementedIncidentServiceServer) UpdateIncident(ctx context.Context, req *UpdateIncidentRequest) (*Incident, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIncident not implemented")
}
func (*UnimplementedIncidentServiceServer) SearchSimilarIncidents(ctx context.Context, req *SearchSimilarIncidentsRequest) (*SearchSimilarIncidentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchSimilarIncidents not implemented")
}
func (*UnimplementedIncidentServiceServer) CreateAnnotation(ctx context.Context, req *CreateAnnotationRequest) (*Annotation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAnnotation not implemented")
}
func (*UnimplementedIncidentServiceServer) ListAnnotations(ctx context.Context, req *ListAnnotationsRequest) (*ListAnnotationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAnnotations not implemented")
}
func (*UnimplementedIncidentServiceServer) CreateTag(ctx context.Context, req *CreateTagRequest) (*Tag, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTag not implemented")
}
func (*UnimplementedIncidentServiceServer) DeleteTag(ctx context.Context, req *DeleteTagRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTag not implemented")
}
func (*UnimplementedIncidentServiceServer) ListTags(ctx context.Context, req *ListTagsRequest) (*ListTagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTags not implemented")
}
func (*UnimplementedIncidentServiceServer) CreateSignal(ctx context.Context, req *CreateSignalRequest) (*Signal, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSignal not implemented")
}
func (*UnimplementedIncidentServiceServer) SearchSignals(ctx context.Context, req *SearchSignalsRequest) (*SearchSignalsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchSignals not implemented")
}
func (*UnimplementedIncidentServiceServer) LookupSignal(ctx context.Context, req *LookupSignalRequest) (*Signal, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LookupSignal not implemented")
}
func (*UnimplementedIncidentServiceServer) GetSignal(ctx context.Context, req *GetSignalRequest) (*Signal, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSignal not implemented")
}
func (*UnimplementedIncidentServiceServer) UpdateSignal(ctx context.Context, req *UpdateSignalRequest) (*Signal, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSignal not implemented")
}
func (*UnimplementedIncidentServiceServer) EscalateIncident(ctx context.Context, req *EscalateIncidentRequest) (*EscalateIncidentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EscalateIncident not implemented")
}
func (*UnimplementedIncidentServiceServer) CreateArtifact(ctx context.Context, req *CreateArtifactRequest) (*Artifact, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateArtifact not implemented")
}
func (*UnimplementedIncidentServiceServer) ListArtifacts(ctx context.Context, req *ListArtifactsRequest) (*ListArtifactsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListArtifacts not implemented")
}
func (*UnimplementedIncidentServiceServer) UpdateArtifact(ctx context.Context, req *UpdateArtifactRequest) (*Artifact, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateArtifact not implemented")
}
func (*UnimplementedIncidentServiceServer) DeleteArtifact(ctx context.Context, req *DeleteArtifactRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteArtifact not implemented")
}
func (*UnimplementedIncidentServiceServer) SendShiftHandoff(ctx context.Context, req *SendShiftHandoffRequest) (*SendShiftHandoffResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendShiftHandoff not implemented")
}
func (*UnimplementedIncidentServiceServer) CreateSubscription(ctx context.Context, req *CreateSubscriptionRequest) (*Subscription, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubscription not implemented")
}
func (*UnimplementedIncidentServiceServer) UpdateSubscription(ctx context.Context, req *UpdateSubscriptionRequest) (*Subscription, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubscription not implemented")
}
func (*UnimplementedIncidentServiceServer) ListSubscriptions(ctx context.Context, req *ListSubscriptionsRequest) (*ListSubscriptionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListSubscriptions not implemented")
}
func (*UnimplementedIncidentServiceServer) DeleteSubscription(ctx context.Context, req *DeleteSubscriptionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSubscription not implemented")
}
func (*UnimplementedIncidentServiceServer) CreateIncidentRoleAssignment(ctx context.Context, req *CreateIncidentRoleAssignmentRequest) (*IncidentRoleAssignment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIncidentRoleAssignment not implemented")
}
func (*UnimplementedIncidentServiceServer) DeleteIncidentRoleAssignment(ctx context.Context, req *DeleteIncidentRoleAssignmentRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteIncidentRoleAssignment not implemented")
}
func (*UnimplementedIncidentServiceServer) ListIncidentRoleAssignments(ctx context.Context, req *ListIncidentRoleAssignmentsRequest) (*ListIncidentRoleAssignmentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListIncidentRoleAssignments not implemented")
}
func (*UnimplementedIncidentServiceServer) RequestIncidentRoleHandover(ctx context.Context, req *RequestIncidentRoleHandoverRequest) (*IncidentRoleAssignment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestIncidentRoleHandover not implemented")
}
func (*UnimplementedIncidentServiceServer) ConfirmIncidentRoleHandover(ctx context.Context, req *ConfirmIncidentRoleHandoverRequest) (*IncidentRoleAssignment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfirmIncidentRoleHandover not implemented")
}
func (*UnimplementedIncidentServiceServer) ForceIncidentRoleHandover(ctx context.Context, req *ForceIncidentRoleHandoverRequest) (*IncidentRoleAssignment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForceIncidentRoleHandover not implemented")
}
func (*UnimplementedIncidentServiceServer) CancelIncidentRoleHandover(ctx context.Context, req *CancelIncidentRoleHandoverRequest) (*IncidentRoleAssignment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelIncidentRoleHandover not implemented")
}

func RegisterIncidentServiceServer(s *grpc.Server, srv IncidentServiceServer) {
	s.RegisterService(&_IncidentService_serviceDesc, srv)
}

func _IncidentService_CreateIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIncidentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CreateIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/CreateIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CreateIncident(ctx, req.(*CreateIncidentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_GetIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIncidentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).GetIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/GetIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).GetIncident(ctx, req.(*GetIncidentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_SearchIncidents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchIncidentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).SearchIncidents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/SearchIncidents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).SearchIncidents(ctx, req.(*SearchIncidentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_UpdateIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateIncidentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).UpdateIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/UpdateIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).UpdateIncident(ctx, req.(*UpdateIncidentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_SearchSimilarIncidents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchSimilarIncidentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).SearchSimilarIncidents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/SearchSimilarIncidents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).SearchSimilarIncidents(ctx, req.(*SearchSimilarIncidentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_CreateAnnotation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAnnotationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CreateAnnotation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/CreateAnnotation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CreateAnnotation(ctx, req.(*CreateAnnotationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ListAnnotations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAnnotationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ListAnnotations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/ListAnnotations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ListAnnotations(ctx, req.(*ListAnnotationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_CreateTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CreateTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/CreateTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CreateTag(ctx, req.(*CreateTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_DeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTagRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).DeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/DeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).DeleteTag(ctx, req.(*DeleteTagRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ListTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ListTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/ListTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ListTags(ctx, req.(*ListTagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_CreateSignal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSignalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CreateSignal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/CreateSignal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CreateSignal(ctx, req.(*CreateSignalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_SearchSignals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchSignalsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).SearchSignals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/SearchSignals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).SearchSignals(ctx, req.(*SearchSignalsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_LookupSignal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupSignalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).LookupSignal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/LookupSignal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).LookupSignal(ctx, req.(*LookupSignalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_GetSignal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSignalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).GetSignal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/GetSignal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).GetSignal(ctx, req.(*GetSignalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_UpdateSignal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSignalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).UpdateSignal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/UpdateSignal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).UpdateSignal(ctx, req.(*UpdateSignalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_EscalateIncident_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EscalateIncidentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).EscalateIncident(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/EscalateIncident",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).EscalateIncident(ctx, req.(*EscalateIncidentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_CreateArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CreateArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/CreateArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CreateArtifact(ctx, req.(*CreateArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ListArtifacts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListArtifactsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ListArtifacts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/ListArtifacts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ListArtifacts(ctx, req.(*ListArtifactsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_UpdateArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).UpdateArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/UpdateArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).UpdateArtifact(ctx, req.(*UpdateArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_DeleteArtifact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteArtifactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).DeleteArtifact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/DeleteArtifact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).DeleteArtifact(ctx, req.(*DeleteArtifactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_SendShiftHandoff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendShiftHandoffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).SendShiftHandoff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/SendShiftHandoff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).SendShiftHandoff(ctx, req.(*SendShiftHandoffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_CreateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CreateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/CreateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CreateSubscription(ctx, req.(*CreateSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_UpdateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).UpdateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/UpdateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).UpdateSubscription(ctx, req.(*UpdateSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ListSubscriptions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListSubscriptionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ListSubscriptions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/ListSubscriptions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ListSubscriptions(ctx, req.(*ListSubscriptionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_DeleteSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).DeleteSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/DeleteSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).DeleteSubscription(ctx, req.(*DeleteSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_CreateIncidentRoleAssignment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIncidentRoleAssignmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CreateIncidentRoleAssignment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/CreateIncidentRoleAssignment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CreateIncidentRoleAssignment(ctx, req.(*CreateIncidentRoleAssignmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_DeleteIncidentRoleAssignment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIncidentRoleAssignmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).DeleteIncidentRoleAssignment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/DeleteIncidentRoleAssignment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).DeleteIncidentRoleAssignment(ctx, req.(*DeleteIncidentRoleAssignmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ListIncidentRoleAssignments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIncidentRoleAssignmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ListIncidentRoleAssignments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/ListIncidentRoleAssignments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ListIncidentRoleAssignments(ctx, req.(*ListIncidentRoleAssignmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_RequestIncidentRoleHandover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestIncidentRoleHandoverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).RequestIncidentRoleHandover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/RequestIncidentRoleHandover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).RequestIncidentRoleHandover(ctx, req.(*RequestIncidentRoleHandoverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ConfirmIncidentRoleHandover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmIncidentRoleHandoverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ConfirmIncidentRoleHandover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/ConfirmIncidentRoleHandover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ConfirmIncidentRoleHandover(ctx, req.(*ConfirmIncidentRoleHandoverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_ForceIncidentRoleHandover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForceIncidentRoleHandoverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).ForceIncidentRoleHandover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/ForceIncidentRoleHandover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).ForceIncidentRoleHandover(ctx, req.(*ForceIncidentRoleHandoverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IncidentService_CancelIncidentRoleHandover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelIncidentRoleHandoverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IncidentServiceServer).CancelIncidentRoleHandover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.irm.v1alpha2.IncidentService/CancelIncidentRoleHandover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IncidentServiceServer).CancelIncidentRoleHandover(ctx, req.(*CancelIncidentRoleHandoverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IncidentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.cloud.irm.v1alpha2.IncidentService",
	HandlerType: (*IncidentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIncident",
			Handler:    _IncidentService_CreateIncident_Handler,
		},
		{
			MethodName: "GetIncident",
			Handler:    _IncidentService_GetIncident_Handler,
		},
		{
			MethodName: "SearchIncidents",
			Handler:    _IncidentService_SearchIncidents_Handler,
		},
		{
			MethodName: "UpdateIncident",
			Handler:    _IncidentService_UpdateIncident_Handler,
		},
		{
			MethodName: "SearchSimilarIncidents",
			Handler:    _IncidentService_SearchSimilarIncidents_Handler,
		},
		{
			MethodName: "CreateAnnotation",
			Handler:    _IncidentService_CreateAnnotation_Handler,
		},
		{
			MethodName: "ListAnnotations",
			Handler:    _IncidentService_ListAnnotations_Handler,
		},
		{
			MethodName: "CreateTag",
			Handler:    _IncidentService_CreateTag_Handler,
		},
		{
			MethodName: "DeleteTag",
			Handler:    _IncidentService_DeleteTag_Handler,
		},
		{
			MethodName: "ListTags",
			Handler:    _IncidentService_ListTags_Handler,
		},
		{
			MethodName: "CreateSignal",
			Handler:    _IncidentService_CreateSignal_Handler,
		},
		{
			MethodName: "SearchSignals",
			Handler:    _IncidentService_SearchSignals_Handler,
		},
		{
			MethodName: "LookupSignal",
			Handler:    _IncidentService_LookupSignal_Handler,
		},
		{
			MethodName: "GetSignal",
			Handler:    _IncidentService_GetSignal_Handler,
		},
		{
			MethodName: "UpdateSignal",
			Handler:    _IncidentService_UpdateSignal_Handler,
		},
		{
			MethodName: "EscalateIncident",
			Handler:    _IncidentService_EscalateIncident_Handler,
		},
		{
			MethodName: "CreateArtifact",
			Handler:    _IncidentService_CreateArtifact_Handler,
		},
		{
			MethodName: "ListArtifacts",
			Handler:    _IncidentService_ListArtifacts_Handler,
		},
		{
			MethodName: "UpdateArtifact",
			Handler:    _IncidentService_UpdateArtifact_Handler,
		},
		{
			MethodName: "DeleteArtifact",
			Handler:    _IncidentService_DeleteArtifact_Handler,
		},
		{
			MethodName: "SendShiftHandoff",
			Handler:    _IncidentService_SendShiftHandoff_Handler,
		},
		{
			MethodName: "CreateSubscription",
			Handler:    _IncidentService_CreateSubscription_Handler,
		},
		{
			MethodName: "UpdateSubscription",
			Handler:    _IncidentService_UpdateSubscription_Handler,
		},
		{
			MethodName: "ListSubscriptions",
			Handler:    _IncidentService_ListSubscriptions_Handler,
		},
		{
			MethodName: "DeleteSubscription",
			Handler:    _IncidentService_DeleteSubscription_Handler,
		},
		{
			MethodName: "CreateIncidentRoleAssignment",
			Handler:    _IncidentService_CreateIncidentRoleAssignment_Handler,
		},
		{
			MethodName: "DeleteIncidentRoleAssignment",
			Handler:    _IncidentService_DeleteIncidentRoleAssignment_Handler,
		},
		{
			MethodName: "ListIncidentRoleAssignments",
			Handler:    _IncidentService_ListIncidentRoleAssignments_Handler,
		},
		{
			MethodName: "RequestIncidentRoleHandover",
			Handler:    _IncidentService_RequestIncidentRoleHandover_Handler,
		},
		{
			MethodName: "ConfirmIncidentRoleHandover",
			Handler:    _IncidentService_ConfirmIncidentRoleHandover_Handler,
		},
		{
			MethodName: "ForceIncidentRoleHandover",
			Handler:    _IncidentService_ForceIncidentRoleHandover_Handler,
		},
		{
			MethodName: "CancelIncidentRoleHandover",
			Handler:    _IncidentService_CancelIncidentRoleHandover_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/cloud/irm/v1alpha2/incidents_service.proto",
}
