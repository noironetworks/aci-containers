// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/cloud/bigquery/storage/v1beta2/avro.proto

package storage

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Avro schema.
type AvroSchema struct {
	// Json serialized schema, as described at
	// https://avro.apache.org/docs/1.8.1/spec.html.
	Schema               string   `protobuf:"bytes,1,opt,name=schema,proto3" json:"schema,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvroSchema) Reset()         { *m = AvroSchema{} }
func (m *AvroSchema) String() string { return proto.CompactTextString(m) }
func (*AvroSchema) ProtoMessage()    {}
func (*AvroSchema) Descriptor() ([]byte, []int) {
	return fileDescriptor_6dd05958ee4fc965, []int{0}
}

func (m *AvroSchema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvroSchema.Unmarshal(m, b)
}
func (m *AvroSchema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvroSchema.Marshal(b, m, deterministic)
}
func (m *AvroSchema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvroSchema.Merge(m, src)
}
func (m *AvroSchema) XXX_Size() int {
	return xxx_messageInfo_AvroSchema.Size(m)
}
func (m *AvroSchema) XXX_DiscardUnknown() {
	xxx_messageInfo_AvroSchema.DiscardUnknown(m)
}

var xxx_messageInfo_AvroSchema proto.InternalMessageInfo

func (m *AvroSchema) GetSchema() string {
	if m != nil {
		return m.Schema
	}
	return ""
}

// Avro rows.
type AvroRows struct {
	// Binary serialized rows in a block.
	SerializedBinaryRows []byte   `protobuf:"bytes,1,opt,name=serialized_binary_rows,json=serializedBinaryRows,proto3" json:"serialized_binary_rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvroRows) Reset()         { *m = AvroRows{} }
func (m *AvroRows) String() string { return proto.CompactTextString(m) }
func (*AvroRows) ProtoMessage()    {}
func (*AvroRows) Descriptor() ([]byte, []int) {
	return fileDescriptor_6dd05958ee4fc965, []int{1}
}

func (m *AvroRows) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvroRows.Unmarshal(m, b)
}
func (m *AvroRows) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvroRows.Marshal(b, m, deterministic)
}
func (m *AvroRows) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvroRows.Merge(m, src)
}
func (m *AvroRows) XXX_Size() int {
	return xxx_messageInfo_AvroRows.Size(m)
}
func (m *AvroRows) XXX_DiscardUnknown() {
	xxx_messageInfo_AvroRows.DiscardUnknown(m)
}

var xxx_messageInfo_AvroRows proto.InternalMessageInfo

func (m *AvroRows) GetSerializedBinaryRows() []byte {
	if m != nil {
		return m.SerializedBinaryRows
	}
	return nil
}

func init() {
	proto.RegisterType((*AvroSchema)(nil), "google.cloud.bigquery.storage.v1beta2.AvroSchema")
	proto.RegisterType((*AvroRows)(nil), "google.cloud.bigquery.storage.v1beta2.AvroRows")
}

func init() {
	proto.RegisterFile("google/cloud/bigquery/storage/v1beta2/avro.proto", fileDescriptor_6dd05958ee4fc965)
}

var fileDescriptor_6dd05958ee4fc965 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0xd0, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x06, 0x70, 0x79, 0xa9, 0xa8, 0xc5, 0x14, 0xa1, 0x8a, 0x11, 0x55, 0x20, 0xc1, 0x62, 0xf3,
	0x6f, 0x63, 0x81, 0xcc, 0x0c, 0x55, 0xd8, 0x58, 0xaa, 0x73, 0x7a, 0x3a, 0x2c, 0xb9, 0xb9, 0x72,
	0x4e, 0x53, 0x85, 0x07, 0xe0, 0xb9, 0x91, 0x1d, 0x23, 0x46, 0xba, 0xf9, 0xf4, 0xf9, 0x27, 0xfb,
	0x3b, 0x7d, 0x4b, 0xcc, 0x14, 0xd0, 0xb6, 0x81, 0xf7, 0x1b, 0xeb, 0x3c, 0x7d, 0xee, 0x51, 0x46,
	0x1b, 0x7b, 0x16, 0x20, 0xb4, 0xc3, 0x9d, 0xc3, 0x1e, 0xee, 0x2d, 0x0c, 0xc2, 0x66, 0x27, 0xdc,
	0x73, 0x75, 0x35, 0x09, 0x93, 0x85, 0xf9, 0x15, 0xa6, 0x08, 0x53, 0xc4, 0xf2, 0x52, 0xeb, 0x97,
	0x41, 0xf8, 0xad, 0xfd, 0xc0, 0x2d, 0x54, 0x0b, 0x3d, 0x8b, 0xf9, 0x74, 0xae, 0x2e, 0xd4, 0xf5,
	0xbc, 0x29, 0xd3, 0xf2, 0x59, 0x9f, 0xa4, 0x5b, 0x0d, 0x1f, 0x62, 0xf5, 0xa8, 0x17, 0x11, 0xc5,
	0x43, 0xf0, 0x5f, 0xb8, 0x59, 0x3b, 0xdf, 0x81, 0x8c, 0x6b, 0xe1, 0x43, 0xcc, 0xe6, 0xb4, 0x39,
	0xfb, 0x4b, 0xeb, 0x1c, 0x26, 0x55, 0x7f, 0x2b, 0x7d, 0xd3, 0xf2, 0xd6, 0x1c, 0xf5, 0xab, 0x7a,
	0x9e, 0x5e, 0x5b, 0xa5, 0x1e, 0x2b, 0xf5, 0xfe, 0x5a, 0x0c, 0x71, 0x80, 0x8e, 0x0c, 0x0b, 0x59,
	0xc2, 0x2e, 0xb7, 0xb4, 0x53, 0x04, 0x3b, 0x1f, 0xff, 0x59, 0xcd, 0x53, 0x99, 0xdd, 0x2c, 0xc3,
	0x87, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0c, 0xd6, 0x32, 0x34, 0x52, 0x01, 0x00, 0x00,
}
